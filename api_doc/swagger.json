{
  "openapi": "3.0.1",
  "info": {
    "title": "PL",
    "version": "1.0"
  },
  "paths": {
    "/api/AdminUnit/AddOrUpdate": {
      "post": {
        "tags": [
          "AdminUnit"
        ],
        "summary": "Добавить или обновить экземпляр Административная единица",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"soate\": \"string\",\r\n                    \"description\": \"описание\",\r\n                    \"idParent\": 0,\r\n                    \"idParentNavName\": \"string\",\r\n                    \"idUnitType\": 0,\r\n                    \"idUnitTypeNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AdminUnit/GetAll": {
      "get": {
        "tags": [
          "AdminUnit"
        ],
        "summary": "Вернуть все записи Административная единица",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Административная единица",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AdminUnit/GetAllForSearch": {
      "get": {
        "tags": [
          "AdminUnit"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AdminUnit/GetByidParent": {
      "get": {
        "tags": [
          "AdminUnit"
        ],
        "parameters": [
          {
            "name": "idParent",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AdminUnit/GetByidUnitType": {
      "get": {
        "tags": [
          "AdminUnit"
        ],
        "parameters": [
          {
            "name": "idUnitType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AdminUnit/GetOneById": {
      "get": {
        "tags": [
          "AdminUnit"
        ],
        "summary": "Вернуть id одного запрошенного Административная единица",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Административная единица",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUnitDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AdminUnit/Delete": {
      "post": {
        "tags": [
          "AdminUnit"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AdminUnitType/AddOrUpdate": {
      "post": {
        "tags": [
          "AdminUnitType"
        ],
        "summary": "Добавить или обновить экземпляр Тип Административной единицы",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"описание\",\r\n                    \"code\": \"string\",\r\n                    \"queueNumber\": 0\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUnitTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AdminUnitType/GetAll": {
      "get": {
        "tags": [
          "AdminUnitType"
        ],
        "summary": "Вернуть все записи Тип Административной единицы",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Тип Административной единицы",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUnitTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AdminUnitType/GetOneById": {
      "get": {
        "tags": [
          "AdminUnitType"
        ],
        "summary": "Вернуть id одного запрошенного Тип Административной единицы",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Тип Административной единицы",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUnitTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUnitTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUnitTypeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AdminUnitType/Delete": {
      "post": {
        "tags": [
          "AdminUnitType"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AgeType/AddOrUpdate": {
      "post": {
        "tags": [
          "AgeType"
        ],
        "summary": "Добавить или обновить экземпляр Тип возраста",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"лет\\месяцев\\дней\",\r\n                    \"description\": \"описание\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AgeTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AgeTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AgeType/GetAll": {
      "get": {
        "tags": [
          "AgeType"
        ],
        "summary": "Вернуть все записи AgeType",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Тип возраста",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AgeType/GetOneById": {
      "get": {
        "tags": [
          "AgeType"
        ],
        "summary": "Вернуть id одного запрошенного Тип возраста",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Тип возраста",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgeTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeTypeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AgeType/Delete": {
      "post": {
        "tags": [
          "AgeType"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/ApiFunction/AddOrUpdate": {
      "post": {
        "tags": [
          "ApiFunction"
        ],
        "summary": "Добавить или обновить экземпляр Функция API",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"описание\",\r\n                    \"code\": \"string\",\r\n                    \"queueNumber\": 0,\r\n                    \"idModule\": 0,\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiFunctionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiFunctionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiFunctionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiFunctionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/ApiFunction/GetAll": {
      "get": {
        "tags": [
          "ApiFunction"
        ],
        "summary": "Вернуть все записи Функция API",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Функция API",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/ApiFunction/GetForRole": {
      "get": {
        "tags": [
          "ApiFunction"
        ],
        "parameters": [
          {
            "name": "idRole",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ApiFunction/GetOneById": {
      "get": {
        "tags": [
          "ApiFunction"
        ],
        "summary": "Вернуть id одного запрошенного Функция API",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Функция API",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiFunctionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiFunctionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiFunctionDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/ApiFunction/Delete": {
      "post": {
        "tags": [
          "ApiFunction"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/ApiFunction/GetByidModule": {
      "get": {
        "tags": [
          "ApiFunction"
        ],
        "parameters": [
          {
            "name": "idModule",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiFunctionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AppDocument/AddOrUpdate": {
      "post": {
        "tags": [
          "AppDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppDocument/GetAll": {
      "get": {
        "tags": [
          "AppDocument"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AppDocument/DownloadDocument": {
      "get": {
        "tags": [
          "AppDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/AppDocument/GetByidDocumentType": {
      "get": {
        "tags": [
          "AppDocument"
        ],
        "parameters": [
          {
            "name": "idDocumentType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AppDocument/GetByidFile": {
      "get": {
        "tags": [
          "AppDocument"
        ],
        "parameters": [
          {
            "name": "idFile",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AppDocument/GetOneById": {
      "get": {
        "tags": [
          "AppDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppDocument/Delete": {
      "post": {
        "tags": [
          "AppDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/AppealType/AddOrUpdate": {
      "post": {
        "tags": [
          "AppealType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppealTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppealTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppealTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppealTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppealType/GetAll": {
      "get": {
        "tags": [
          "AppealType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppealTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppealTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppealTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AppealType/GetOneById": {
      "get": {
        "tags": [
          "AppealType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppealTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppealTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppealTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppealType/Delete": {
      "post": {
        "tags": [
          "AppealType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ApplicationRole/AddOrUpdate": {
      "post": {
        "tags": [
          "ApplicationRole"
        ],
        "summary": "Добавить или обновить экземпляр Роли",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"описание\",\r\n                    \"code\": \"string\",\r\n                    \"queueNumber\": 0,\r\n                    \"idCustomSvgIcon\": 0,\r\n                    \"iconColor\": \"string\",\r\n                    \"idAppRoleCategory\": 0,\r\n                    \"idAppRoleCategoryNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/ApplicationRole/GetAll": {
      "get": {
        "tags": [
          "ApplicationRole"
        ],
        "summary": "Вернуть все записи Роли",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Роли",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationRoleDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/ApplicationRole/GetSettings": {
      "get": {
        "tags": [
          "ApplicationRole"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/ApplicationRole/GetOneById": {
      "get": {
        "tags": [
          "ApplicationRole"
        ],
        "summary": "Вернуть id одного запрошенного Роли",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Роли",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/ApplicationRole/Delete": {
      "post": {
        "tags": [
          "ApplicationRole"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AppModule/AddOrUpdate": {
      "post": {
        "tags": [
          "AppModule"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppModuleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppModuleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppModuleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppModuleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppModule/GetAll": {
      "get": {
        "tags": [
          "AppModule"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppModuleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppModuleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppModuleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AppModule/GetOneById": {
      "get": {
        "tags": [
          "AppModule"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppModuleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppModuleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppModuleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppModule/Delete": {
      "post": {
        "tags": [
          "AppModule"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/AppRoleCategory/AddOrUpdate": {
      "post": {
        "tags": [
          "AppRoleCategory"
        ],
        "summary": "Добавить или обновить экземпляр Категория Роли",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"описание\",\r\n                    \"code\": \"string\",\r\n                    \"queueNumber\": 0\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppRoleCategoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppRoleCategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppRoleCategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppRoleCategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AppRoleCategory/GetAll": {
      "get": {
        "tags": [
          "AppRoleCategory"
        ],
        "summary": "Вернуть все записи Категория Роли",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Категория Роли",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppRoleCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppRoleCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppRoleCategoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AppRoleCategory/GetOneById": {
      "get": {
        "tags": [
          "AppRoleCategory"
        ],
        "summary": "Вернуть id одного запрошенного Категория Роли",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Категория Роли",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppRoleCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRoleCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppRoleCategoryDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AppRoleCategory/Delete": {
      "post": {
        "tags": [
          "AppRoleCategory"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AutoChannel/AddOrUpdate": {
      "post": {
        "tags": [
          "AutoChannel"
        ],
        "summary": "Добавить или обновить экземпляр Автоматический канал",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"описание\",\r\n                    \"code\": \"string\",\r\n                    \"idDocumentTemplate\": 0,\r\n                    \"idDocumentTemplateNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AutoChannel/GetAll": {
      "get": {
        "tags": [
          "AutoChannel"
        ],
        "summary": "Вернуть все записи Автоматический канал",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Автоматический канал",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AutoChannel/GetByidDocumentTemplate": {
      "get": {
        "tags": [
          "AutoChannel"
        ],
        "parameters": [
          {
            "name": "idDocumentTemplate",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoChannel/GetOneById": {
      "get": {
        "tags": [
          "AutoChannel"
        ],
        "summary": "Вернуть id одного запрошенного Автоматический канал",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Автоматический канал",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoChannelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoChannelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoChannelDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AutoChannel/Delete": {
      "post": {
        "tags": [
          "AutoChannel"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AutoChannelCallSetting/GetAll": {
      "get": {
        "tags": [
          "AutoChannelCallSetting"
        ],
        "summary": "Вернуть все записи Автоматическая настройка вызова канала",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Автоматическая настройка вызова канала",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AutoChannelCallSetting/AddOrUpdate": {
      "post": {
        "tags": [
          "AutoChannelCallSetting"
        ],
        "summary": "Добавить или обновить экземпляр Автоматическая настройка вызова канала",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"id\": 0,\r\n                     \"idButton\": 0,\r\n                     \"idButtonNavName\": \"string\",\r\n                     \"idAutoChannel\": 0,\r\n                     \"idAutoChannelNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelCallSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelCallSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelCallSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoChannelCallSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/AutoChannelCallSetting/GetOneById": {
      "get": {
        "tags": [
          "AutoChannelCallSetting"
        ],
        "summary": "Вернуть id одного запрошенного Автоматическая настройка вызова канала",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Автоматическая настройка вызова канала",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AutoChannelCallSetting/Delete": {
      "post": {
        "tags": [
          "AutoChannelCallSetting"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/AutoChannelCallSetting/GetByidButton": {
      "get": {
        "tags": [
          "AutoChannelCallSetting"
        ],
        "parameters": [
          {
            "name": "idButton",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoChannelCallSetting/GetByidAutoChannel": {
      "get": {
        "tags": [
          "AutoChannelCallSetting"
        ],
        "parameters": [
          {
            "name": "idAutoChannel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutoChannelCallSettingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Blog/AddOrUpdate": {
      "post": {
        "tags": [
          "Blog"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Document.file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Document.name": {
                    "type": "string"
                  },
                  "Document.description": {
                    "type": "string"
                  },
                  "Document.idFileType": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "author": {
                    "type": "string"
                  },
                  "idImage": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "type": "string"
                  },
                  "text": {
                    "type": "string"
                  },
                  "shortText": {
                    "type": "string"
                  },
                  "titleky": {
                    "type": "string"
                  },
                  "textky": {
                    "type": "string"
                  },
                  "shortTextky": {
                    "type": "string"
                  },
                  "timeRegistered": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "strtimeRegistered": {
                    "type": "string"
                  },
                  "timePublished": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "strtimePublished": {
                    "type": "string"
                  },
                  "lastUpdatedUser": {
                    "type": "string"
                  },
                  "lastUpdatedTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "strlastUpdatedTime": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Document.file": {
                  "style": "form"
                },
                "Document.name": {
                  "style": "form"
                },
                "Document.description": {
                  "style": "form"
                },
                "Document.idFileType": {
                  "style": "form"
                },
                "id": {
                  "style": "form"
                },
                "isActive": {
                  "style": "form"
                },
                "author": {
                  "style": "form"
                },
                "idImage": {
                  "style": "form"
                },
                "title": {
                  "style": "form"
                },
                "text": {
                  "style": "form"
                },
                "shortText": {
                  "style": "form"
                },
                "titleky": {
                  "style": "form"
                },
                "textky": {
                  "style": "form"
                },
                "shortTextky": {
                  "style": "form"
                },
                "timeRegistered": {
                  "style": "form"
                },
                "strtimeRegistered": {
                  "style": "form"
                },
                "timePublished": {
                  "style": "form"
                },
                "strtimePublished": {
                  "style": "form"
                },
                "lastUpdatedUser": {
                  "style": "form"
                },
                "lastUpdatedTime": {
                  "style": "form"
                },
                "strlastUpdatedTime": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Blog/GetAll": {
      "get": {
        "tags": [
          "Blog"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Blog/GetImage": {
      "get": {
        "tags": [
          "Blog"
        ],
        "parameters": [
          {
            "name": "idImage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Blog/GetAllPublishedAndActive": {
      "get": {
        "tags": [
          "Blog"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Blog/GetOneById": {
      "get": {
        "tags": [
          "Blog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Blog/Delete": {
      "post": {
        "tags": [
          "Blog"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Blog/GetByidImage": {
      "get": {
        "tags": [
          "Blog"
        ],
        "parameters": [
          {
            "name": "idImage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/AddOrUpdate": {
      "post": {
        "tags": [
          "Brigade"
        ],
        "summary": "Добавить или обновить экземпляр Бригада",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"number\": \"string\",\r\n                    \"comment\": \"string\",\r\n                    \"xCoord\": \"string\",\r\n                    \"yCoord\": \"string\",\r\n                    \"timeCoord\": \"2023-03-22T09:10:25.517Z\",\r\n                    \"idCurrentStatus\": 0,\r\n                    \"idCurrentStatusNavName\": \"string\",\r\n                    \"idCar\": 0,\r\n                    \"idCarNavName\": \"string\",\r\n                    \"idSubstation\": 0,\r\n                    \"idSubstationNavName\": \"string\",\r\n                    \"idShift\": 0,\r\n                    \"idShiftNavName\": \"string\",\r\n                    \"idBrigadeType\": 0,\r\n                     \"idBrigadeTypeNavName\": \"string\",\r\n                     \"idProfile\": 0,\r\n                     \"idProfileNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/Brigade/ChangeStatus": {
      "post": {
        "tags": [
          "Brigade"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeChangeStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeChangeStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeChangeStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeChangeStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetAll": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "summary": "Вернуть все записи Бригада",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Бригада",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/Brigade/GetAllActive": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetCurrentBrigades": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetForCurrentDoctor": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetByidShift": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "parameters": [
          {
            "name": "idShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetByidShiftAndCard": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "parameters": [
          {
            "name": "idShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetByidBrigadeType": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "parameters": [
          {
            "name": "idBrigadeType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetCountFreeBrigades": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetByidCurrentStatus": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "parameters": [
          {
            "name": "idCurrentStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetByidProfile": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "parameters": [
          {
            "name": "idProfile",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetByidSubstation": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "parameters": [
          {
            "name": "idSubstation",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brigade/GetOneById": {
      "get": {
        "tags": [
          "Brigade"
        ],
        "summary": "Вернуть id одного запрошенного Бригада",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Бригада",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/Brigade/Delete": {
      "post": {
        "tags": [
          "Brigade"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeCoordinate/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "summary": "Добавить или обновить экземпляр Координаты Бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                     \"idBrigadeInCall\": 0,\r\n                     \"idCard\": 0,\r\n                     \"idBrigade\": 0,\r\n                     \"latitude\": 0,\r\n                     \"longitude\": 0,\r\n                     \"date\": \"2023-03-22T09:17:43.065Z\",\r\n                     \"strdate\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeCoordinate/AddOrUpdate2": {
      "post": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeCoordinateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeCoordinate/GetAll": {
      "get": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "summary": "Вернуть все записи Координаты Бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Координаты Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeCoordinate/GetOneById": {
      "get": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "summary": "Вернуть id одного запрошенного Координаты Бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Координаты Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeCoordinateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeCoordinateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeCoordinateDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeCoordinate/Delete": {
      "post": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeCoordinate/GetCoordByIdCard": {
      "get": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeCoordinate/GetMap": {
      "get": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeCoordinate/GetMapForDashboard": {
      "get": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeCoordinate/GetByidBrigade": {
      "get": {
        "tags": [
          "BrigadeCoordinate"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeCoordinateDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeEvent/GetAll": {
      "get": {
        "tags": [
          "BrigadeEvent"
        ],
        "summary": "Вернуть все записи Событие Бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Событие Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeEvent/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeEvent"
        ],
        "summary": "Добавить или обновить экземпляр Событие Бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"dateStart\": \"2023-03-22T09:27:19.132Z\",\r\n                    \"strdateStart\": \"string\",\r\n                    \"dateFinish\": \"2023-03-22T09:27:19.132Z\",\r\n                    \"strdateFinish\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"idType\": 0,\r\n                    \"idTypeNavName\": \"string\",\r\n                    \"idBrigadeInCall\": 0,\r\n                    \"idBrigadeInCallNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeEvent/GetOneById": {
      "get": {
        "tags": [
          "BrigadeEvent"
        ],
        "summary": "Вернуть id одного запрошенного Событие Бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Событие Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeEventDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeEventDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeEventDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeEvent/Delete": {
      "post": {
        "tags": [
          "BrigadeEvent"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeEvent/GetByidType": {
      "get": {
        "tags": [
          "BrigadeEvent"
        ],
        "parameters": [
          {
            "name": "idType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeEvent/GetByidBrigadeInCall": {
      "get": {
        "tags": [
          "BrigadeEvent"
        ],
        "parameters": [
          {
            "name": "idBrigadeInCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeEventType/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeEventType"
        ],
        "summary": "Добавить или обновить экземпляр Тип Событие Бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeEventTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeEventType/GetAll": {
      "get": {
        "tags": [
          "BrigadeEventType"
        ],
        "summary": "Вернуть все записи Тип Событие Бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Тип Событие Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeEventTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeEventType/GetOneById": {
      "get": {
        "tags": [
          "BrigadeEventType"
        ],
        "summary": "Вернуть id одного запрошенного Тип Событие Бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Тип Событие Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeEventTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeEventTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeEventTypeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeEventType/Delete": {
      "post": {
        "tags": [
          "BrigadeEventType"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeInCall/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeInCall"
        ],
        "summary": "Добавить или обновить экземпляр Наряды",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"approveDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strapproveDate\": \"string\",\r\n                    \"idSource\": 0,\r\n                    \"delayStartDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strdelayStartDate\": \"string\",\r\n                    \"arriveDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strarriveDate\": \"string\",\r\n                    \"otzvonDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strotzvonDate\": \"string\",\r\n                    \"returnDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strreturnDate\": \"string\",\r\n                    \"totalDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strtotalDate\": \"string\",\r\n                    \"idBrigade\": 0,\r\n                    \"setupDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strsetupDate\": \"string\",\r\n                    \"isCancelled\": true,\r\n                    \"cancelDate\": \"2023-03-22T09:39:54.111Z\",\r\n                    \"strcancelDate\": \"string\",\r\n                    \"idCancelReason\": 0,\r\n                    \"idCall\": 0,\r\n                    \"idVideoDocument\": 0,\r\n                    \"idStatus\": 0\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeInCall/AssignBrigade": {
      "post": {
        "tags": [
          "BrigadeInCall"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignBrigade"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignBrigade"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignBrigade"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignBrigade"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/ReAssignBrigade": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "summary": "Вернуть все записи Наряды",
        "description": "Sample request:",
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает список Наряды",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeInCall/CancelBrigade": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idBrigadeInCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetAll": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetForScheduler": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetForSchedulerFilter": {
      "post": {
        "tags": [
          "BrigadeInCall"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulerFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulerFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulerFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulerFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetCardsByIdBrigadeByIdBrigade": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidBrigade": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidWorkShift": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetForDashboard": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallForSchedulerDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidCancelReason": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idCancelReason",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidCall": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidVideoDocument": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idVideoDocument",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidStatus": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetByidSource": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "parameters": [
          {
            "name": "idSource",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCall/GetOneById": {
      "get": {
        "tags": [
          "BrigadeInCall"
        ],
        "summary": "Вернуть id одного запрошенного Наряды",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Наряды",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeInCall/Delete": {
      "post": {
        "tags": [
          "BrigadeInCall"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeInCallCardHistory/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeInCallCardHistory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallCardHistoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallCardHistoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallCardHistoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallCardHistoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCallCardHistory/GetAll": {
      "get": {
        "tags": [
          "BrigadeInCallCardHistory"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCallCardHistory/GetOneById": {
      "get": {
        "tags": [
          "BrigadeInCallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCallCardHistory/Delete": {
      "post": {
        "tags": [
          "BrigadeInCallCardHistory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BrigadeInCallCardHistory/GetByidCard": {
      "get": {
        "tags": [
          "BrigadeInCallCardHistory"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCallCardHistory/GetByidBrigadeInCall": {
      "get": {
        "tags": [
          "BrigadeInCallCardHistory"
        ],
        "parameters": [
          {
            "name": "idBrigadeInCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallCardHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeInCallSource/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeInCallSource"
        ],
        "summary": "Добавить или обновить экземпляр Источник Наряда",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallSourceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallSourceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallSourceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallSourceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeInCallSource/GetAll": {
      "get": {
        "tags": [
          "BrigadeInCallSource"
        ],
        "summary": "Вернуть все записи Источник Наряда",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Источник Наряда",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallSourceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallSourceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallSourceDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeInCallSource/GetOneById": {
      "get": {
        "tags": [
          "BrigadeInCallSource"
        ],
        "summary": "Вернуть id одного запрошенного Источник Наряда",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Источник Наряда",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallSourceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallSourceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallSourceDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeInCallSource/Delete": {
      "post": {
        "tags": [
          "BrigadeInCallSource"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeInCallStatus/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeInCallStatus"
        ],
        "summary": "Добавить или обновить экземпляр Статус наряда",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                    \"idCustomSvgIcon\": 0,\r\n                    \"iconColor\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeInCallStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeInCallStatus/GetAll": {
      "get": {
        "tags": [
          "BrigadeInCallStatus"
        ],
        "summary": "Вернуть все записи Статус наряда",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Статус наряда",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeInCallStatusDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeInCallStatus/GetOneById": {
      "get": {
        "tags": [
          "BrigadeInCallStatus"
        ],
        "summary": "Вернуть id одного запрошенного Статус наряда",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Статус наряда",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeInCallStatusDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeInCallStatus/Delete": {
      "post": {
        "tags": [
          "BrigadeInCallStatus"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeStatus/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeStatus"
        ],
        "summary": "Добавить или обновить экземпляр Статус Бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                    \"color1\": \"string\",\r\n                    \"color2\": \"string\",\r\n                    \"iconPath\": \"string\",\r\n                    \"idCustomSvgIcon\": 0,\r\n                    \"iconColor\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeStatus/GetAll": {
      "get": {
        "tags": [
          "BrigadeStatus"
        ],
        "summary": "Вернуть все записи Статус Бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Статус Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeStatus/GetOneById": {
      "get": {
        "tags": [
          "BrigadeStatus"
        ],
        "summary": "Вернуть id одного запрошенного Статус Бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Статус Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeStatusDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeStatus/Delete": {
      "post": {
        "tags": [
          "BrigadeStatus"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeStatusHistory/GetAll": {
      "get": {
        "tags": [
          "BrigadeStatusHistory"
        ],
        "summary": "Вернуть все записи История Статуса Бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список История Статуса Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeStatusHistory/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeStatusHistory"
        ],
        "summary": "Добавить или обновить экземпляр История Статуса Бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0\r\n                    \"dateSetup\": \"2023-03-22T10:07:27.061Z\",\r\n                    \"strdateSetup\": \"string\",\r\n                    \"idBrigade\": 0,\r\n                    \"idBrigadeNavName\": \"string\",\r\n                    \"idStatus\": 0,\r\n                    \"idStatusNavName\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusHistoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusHistoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusHistoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeStatusHistoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeStatusHistory/GetOneById": {
      "get": {
        "tags": [
          "BrigadeStatusHistory"
        ],
        "summary": "Вернуть id одного запрошенного История Статуса Бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает История Статуса Бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeStatusHistory/Delete": {
      "post": {
        "tags": [
          "BrigadeStatusHistory"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeStatusHistory/GetByidBrigade": {
      "get": {
        "tags": [
          "BrigadeStatusHistory"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeStatusHistory/GetByidStatus": {
      "get": {
        "tags": [
          "BrigadeStatusHistory"
        ],
        "parameters": [
          {
            "name": "idStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeStatusHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BrigadeSubstation/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeSubstation"
        ],
        "summary": "Добавить или обновить экземпляр Подстанция",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"address\": \"string\",\r\n                    \"description\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeSubstationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeSubstationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeSubstationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeSubstationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeSubstation/GetAll": {
      "get": {
        "tags": [
          "BrigadeSubstation"
        ],
        "summary": "Вернуть все записи Подстанция",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Подстанция",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeSubstationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeSubstationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeSubstationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeSubstation/GetOneById": {
      "get": {
        "tags": [
          "BrigadeSubstation"
        ],
        "summary": "Вернуть id одного запрошенного Подстанция",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Подстанция",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeSubstationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeSubstationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeSubstationDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeSubstation/Delete": {
      "post": {
        "tags": [
          "BrigadeSubstation"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeType/AddOrUpdate": {
      "post": {
        "tags": [
          "BrigadeType"
        ],
        "summary": "Добавить или обновить экземпляр Тип бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-22T06:48:31.823Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrigadeTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeType/GetAll": {
      "get": {
        "tags": [
          "BrigadeType"
        ],
        "summary": "Вернуть все записи Тип бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Тип бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrigadeTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/BrigadeType/GetOneById": {
      "get": {
        "tags": [
          "BrigadeType"
        ],
        "summary": "Вернуть id одного запрошенного Тип бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Тип бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrigadeTypeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/BrigadeType/Delete": {
      "post": {
        "tags": [
          "BrigadeType"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/Call/AddOrUpdate": {
      "post": {
        "tags": [
          "Call"
        ],
        "summary": "Добавить или обновить экземпляр Вызов",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"timeCall\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strtimeCall\": \"string\",\r\n                    \"duringCall\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strduringCall\": \"string\",\r\n                    \"phoneCaller\": \"string\",\r\n                    \"id\": 0,\r\n                    \"idAudioCall\": 0,\r\n                    \"idAudioCallNavName\": \"string\",\r\n                    \"idCallStatus\": 0,\r\n                    \"idCallStatusNavName\": \"string\",\r\n                    \"callGuid\": \"string\",\r\n                    \"idParent\": 0,\r\n                    \"callProcessed\": true,\r\n                    \"comment\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/Call/GetAll": {
      "get": {
        "tags": [
          "Call"
        ],
        "summary": "Вернуть все записи Вызов",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Вызов",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/Call/GetAllIncoming": {
      "get": {
        "tags": [
          "Call"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetAllOutgoing": {
      "get": {
        "tags": [
          "Call"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetByidAudioCall": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "idAudioCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetLastCalls": {
      "get": {
        "tags": [
          "Call"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetOneById": {
      "get": {
        "tags": [
          "Call"
        ],
        "summary": "Вернуть id одного запрошенного Вызов",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Вызов",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/Call/TransferToNumber": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sip",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pbx_call_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/Call": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "idCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sip",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/HoldNumber": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "sip",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pbx_call_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/TakeOffHold": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "sip",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pbx_call_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/Hangup": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "sip",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pbx_call_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/Answer": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "sip",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pbx_call_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/Delete": {
      "post": {
        "tags": [
          "Call"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/Call/GetByidParent": {
      "get": {
        "tags": [
          "Call"
        ],
        "parameters": [
          {
            "name": "idParent",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetNotAcceptedCalls": {
      "get": {
        "tags": [
          "Call"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetUnfinishedCalls": {
      "get": {
        "tags": [
          "Call"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Call/GetByNotification": {
      "get": {
        "tags": [
          "Call"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/AddOrUpdateAndroid": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/AddOrUpdate": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "summary": "Добавить или обновить экземпляр Карта вызова",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallCard/ParamLoadPost": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ParamLoadModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamLoadModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamLoadModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParamLoadModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CallCard/ParamLoad": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byDescending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateStart",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateEnd",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CallCard/GetAll": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "summary": "Вернуть все записи Карта вызова",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Карта вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallCard/GetNotifyCards": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetNotifyCardsSeniorDoctor": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/AskDispatcherToBrigade": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/ChangeStatusById": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/ChangeStatusByCode": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/SendToSeniorDoctor": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/CompleteCardByDoctor": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/AcceptCardByBrigade": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/BrigadeAction": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statusCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByIdBrigadeAndroid": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filterCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByIdParent": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idParent",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidCall": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidOccassion": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idOccassion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidAppealType": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idAppealType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidCategoryCito": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCategoryCito",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidProfileType": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idProfileType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidWhoCalled": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idWhoCalled",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidMedCenter": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idMedCenter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidWorkShift": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/setIsOk": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/changeMedCenter": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/OkCardsToSendLpu": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByCurrentWorkShift": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByCurrentWorkShiftDoctors": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidCallResult": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallResult",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidBrigade": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidPatient": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idPatient",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetCurrentCardsByDispatcher": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetCurrentCardsByDispatcherAndWorkShift": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidStateChanges": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idStateChanges",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/ChangeBrigadeStatus": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetOneById": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "summary": "Вернуть id одного запрошенного Карта вызова",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Карта вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallCard/GetOneByIdAndroid": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/Delete": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallCard/GetCardsForSite": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardForSiteDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardForSiteDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardForSiteDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetAllByCurrentFeldsher": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetByidWorkShiftAndFeldsher": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetCardCoords": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetCardCoordsByTimes": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "dateStart",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateEnd",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idOccassion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idCallResult",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ageStart",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ageEnd",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetCardCoordsForDashboard": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardCoords"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/GetCallCardsByCoordinate": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "y",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/SeniorDoctorApprove": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idNotify",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/SeniorDoctorDecline": {
      "get": {
        "tags": [
          "CallCard"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idNotify",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCard/UploadAudio": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "idCard": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "idCard": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CallCard/SaveFactCoord": {
      "post": {
        "tags": [
          "CallCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CardArriveCoord"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardArriveCoord"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CardArriveCoord"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CardArriveCoord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardDocument/AddOrUpdate": {
      "post": {
        "tags": [
          "CallCardDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardDocument/GetAll": {
      "get": {
        "tags": [
          "CallCardDocument"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardDocument/GetOneById": {
      "get": {
        "tags": [
          "CallCardDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardDocument/Delete": {
      "post": {
        "tags": [
          "CallCardDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CallCardDocument/GetByidDocument": {
      "get": {
        "tags": [
          "CallCardDocument"
        ],
        "parameters": [
          {
            "name": "idDocument",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardDocument/GetByidCard": {
      "get": {
        "tags": [
          "CallCardDocument"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetHistoryByOneId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_CallCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_CallCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_CallCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetBrigadeHistoryByCardId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_BrigadeInCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_BrigadeInCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_BrigadeInCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetDiagnoseHistoryByCardId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_DiagnoseCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_DiagnoseCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_DiagnoseCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetInspectionDictionariesHistoryByCardId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_InspectionDictionariesCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_InspectionDictionariesCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_InspectionDictionariesCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetPatientHistoryByCardId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_PatientDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_PatientDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_PatientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetRouteHospitalizationHistoryByCardId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_RouteHospitalizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_RouteHospitalizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_RouteHospitalizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardHistory/GetSpentMedicineHistoryByCardId": {
      "get": {
        "tags": [
          "CallCardHistory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_SpentMedicineDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_SpentMedicineDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/History_SpentMedicineDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardOccassion/AddOrUpdate": {
      "post": {
        "tags": [
          "CallCardOccassion"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardOccassionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardOccassionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardOccassionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardOccassionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardOccassion/GetAll": {
      "get": {
        "tags": [
          "CallCardOccassion"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardOccassion/GetOneById": {
      "get": {
        "tags": [
          "CallCardOccassion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardOccassionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardOccassionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardOccassionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardOccassion/Delete": {
      "post": {
        "tags": [
          "CallCardOccassion"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CallCardOccassion/GetByidCallCard": {
      "get": {
        "tags": [
          "CallCardOccassion"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardOccassion/GetByidOccassion": {
      "get": {
        "tags": [
          "CallCardOccassion"
        ],
        "parameters": [
          {
            "name": "idOccassion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardOccassionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardStatus/AddOrUpdate": {
      "post": {
        "tags": [
          "CallCardStatus"
        ],
        "summary": "Добавить или обновить экземпляр Статус Карты вызова",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                    \"idCustomSvgIcon\": 0,\r\n                    \"iconColor\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallCardStatus/GetAll": {
      "get": {
        "tags": [
          "CallCardStatus"
        ],
        "summary": "Вернуть все записи Статус Карты вызова",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Статус Карты вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallCardStatus/GetOneById": {
      "get": {
        "tags": [
          "CallCardStatus"
        ],
        "summary": "Вернуть id одного запрошенного Статус Карты вызова",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Статус Карты вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardStatusDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallCardStatus/Delete": {
      "post": {
        "tags": [
          "CallCardStatus"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallCardStatusHistory/GetAll": {
      "get": {
        "tags": [
          "CallCardStatusHistory"
        ],
        "summary": "Вернуть все записи История Статуса Карты вызова",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список История Статуса Карты вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallCardStatusHistory/AddOrUpdate": {
      "post": {
        "tags": [
          "CallCardStatusHistory"
        ],
        "summary": "Добавить или обновить экземпляр История Статуса Карты вызова",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"setupDate\": \"2023-03-23T08:16:35.490Z\",\r\n                    \"strsetupDate\": \"string\",\r\n                    \"idStatus\": 0,\r\n                   \"idStatusNavName\": \"string\",\r\n                    \"idCard\": 0,\r\n                    \"idCardNavName\": \"string\"\r\n                    \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusHistoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusHistoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusHistoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardStatusHistoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallCardStatusHistory/GetOneById": {
      "get": {
        "tags": [
          "CallCardStatusHistory"
        ],
        "summary": "Вернуть id одного запрошенного История Статуса Карты вызова",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает История Статуса Карты вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallCardStatusHistory/Delete": {
      "post": {
        "tags": [
          "CallCardStatusHistory"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallCardStatusHistory/GetByidStatus": {
      "get": {
        "tags": [
          "CallCardStatusHistory"
        ],
        "parameters": [
          {
            "name": "idStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardStatusHistory/GetByidCard": {
      "get": {
        "tags": [
          "CallCardStatusHistory"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardStatusHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardWorkplace/AddOrUpdate": {
      "post": {
        "tags": [
          "CallCardWorkplace"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardWorkplaceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardWorkplaceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardWorkplaceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallCardWorkplaceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardWorkplace/GetAll": {
      "get": {
        "tags": [
          "CallCardWorkplace"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardWorkplace/GetOneById": {
      "get": {
        "tags": [
          "CallCardWorkplace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardWorkplaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardWorkplaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallCardWorkplaceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardWorkplace/Delete": {
      "post": {
        "tags": [
          "CallCardWorkplace"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CallCardWorkplace/GetByidCard": {
      "get": {
        "tags": [
          "CallCardWorkplace"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallCardWorkplace/GetByidWorkplace": {
      "get": {
        "tags": [
          "CallCardWorkplace"
        ],
        "parameters": [
          {
            "name": "idWorkplace",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallCardWorkplaceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CallResult/AddOrUpdate": {
      "post": {
        "tags": [
          "CallResult"
        ],
        "summary": "Добавить или обновить экземпляр Результат Вызова",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\"        \r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallResultModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallResultModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallResultModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallResultModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallResult/GetAll": {
      "get": {
        "tags": [
          "CallResult"
        ],
        "summary": "Вернуть все записи Результат Вызова",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Результат Вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallResultDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallResultDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallResult/GetOneById": {
      "get": {
        "tags": [
          "CallResult"
        ],
        "summary": "Вернуть id одного запрошенного Результат Вызова",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Результат Вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallResultDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallResult/Delete": {
      "post": {
        "tags": [
          "CallResult"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallStatus/AddOrUpdate": {
      "post": {
        "tags": [
          "CallStatus"
        ],
        "summary": "Добавить или обновить экземпляр Статус Вызова",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                    \"idCustomSvgIcon\": 0,\r\n                    \"iconColor\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CallStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallStatus/GetAll": {
      "get": {
        "tags": [
          "CallStatus"
        ],
        "summary": "Вернуть все записи Статус Вызова",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Статус Вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallStatusDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CallStatus/GetOneById": {
      "get": {
        "tags": [
          "CallStatus"
        ],
        "summary": "Вернуть id одного запрошенного Статус Вызова",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Статус Вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallStatusDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CallStatus/Delete": {
      "post": {
        "tags": [
          "CallStatus"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CancelReasonBrigade/AddOrUpdate": {
      "post": {
        "tags": [
          "CancelReasonBrigade"
        ],
        "summary": "Добавить или обновить экземпляр Причина отмены вызова бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelReasonBrigadeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelReasonBrigadeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelReasonBrigadeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelReasonBrigadeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CancelReasonBrigade/GetAll": {
      "get": {
        "tags": [
          "CancelReasonBrigade"
        ],
        "summary": "Вернуть все записи Причина отмены вызова бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Причина отмены вызова бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelReasonBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelReasonBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelReasonBrigadeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CancelReasonBrigade/GetOneById": {
      "get": {
        "tags": [
          "CancelReasonBrigade"
        ],
        "summary": "Вернуть id одного запрошенного Причина отмены вызова бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Причина отмены вызова бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CancelReasonBrigadeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelReasonBrigadeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelReasonBrigadeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CancelReasonBrigade/Delete": {
      "post": {
        "tags": [
          "CancelReasonBrigade"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/Car/AddOrUpdate": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "Добавить или обновить экземпляр Машина",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"model\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"isActive\": true,\r\n                    \"number\": \"string\",\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CarModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CarModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/Car/GetAll": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "Вернуть все записи Машина",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Машина",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/Car/GetAllActive": {
      "get": {
        "tags": [
          "Car"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Car/GetOneById": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "Вернуть id одного запрошенного Машина",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Машина",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/Car/Delete": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CarInBrigade/GetAll": {
      "get": {
        "tags": [
          "CarInBrigade"
        ],
        "summary": "Вернуть все записи История машин бригады",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список История машин бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CarInBrigade/AddOrUpdate": {
      "post": {
        "tags": [
          "CarInBrigade"
        ],
        "summary": "Добавить или обновить экземпляр История машин бригады",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"dateSetup\": \"2023-03-23T08:44:01.524Z\",\r\n                    \"description\": \"string\",\r\n                    \"idCar\": 0,\r\n                    \"idCarNavName\": \"string\",\r\n                    \"idBrigade\": 0,\r\n                    \"idBrigadeNavName\": \"string\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CarInBrigadeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarInBrigadeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CarInBrigadeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarInBrigadeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CarInBrigade/GetOneById": {
      "get": {
        "tags": [
          "CarInBrigade"
        ],
        "summary": "Вернуть id одного запрошенного История машин бригады",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает История машин бригады",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CarInBrigadeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarInBrigadeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarInBrigadeDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CarInBrigade/Delete": {
      "post": {
        "tags": [
          "CarInBrigade"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CarInBrigade/GetByidCar": {
      "get": {
        "tags": [
          "CarInBrigade"
        ],
        "parameters": [
          {
            "name": "idCar",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CarInBrigade/GetByidBrigade": {
      "get": {
        "tags": [
          "CarInBrigade"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CategoryCito/AddOrUpdate": {
      "post": {
        "tags": [
          "CategoryCito"
        ],
        "summary": "Добавить или обновить экземпляр Срочность вызова",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCitoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCitoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCitoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCitoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CategoryCito/GetAll": {
      "get": {
        "tags": [
          "CategoryCito"
        ],
        "summary": "Вернуть все записи Срочность вызова",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Срочность вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryCitoDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryCitoDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryCitoDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CategoryCito/GetOneById": {
      "get": {
        "tags": [
          "CategoryCito"
        ],
        "summary": "Вернуть id одного запрошенного Срочность вызова",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Срочность вызова",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryCitoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryCitoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryCitoDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CategoryCito/Delete": {
      "post": {
        "tags": [
          "CategoryCito"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CommonSettings/AddOrUpdate": {
      "post": {
        "tags": [
          "CommonSettings"
        ],
        "summary": "Добавить или обновить экземпляр Общие настройки",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"lastUpdatedUser\": \"string\",\r\n                    \"lastUpdatedTime\": \"2023-03-23T06:36:45.904Z\",\r\n                    \"strlastUpdatedTime\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"nameky\": \"string\",\r\n                    \"value\": \"string\",\r\n                    \"valueky\": \"string\",\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommonSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommonSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, возвращает id обновленной/созданной записи",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CommonSettings/GetAll": {
      "get": {
        "tags": [
          "CommonSettings"
        ],
        "summary": "Вернуть все записи Общие настройки",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, возвращает список Общие настройки",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommonSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommonSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommonSettingsDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          },
          "404": {
            "description": "Неверный запрос"
          }
        }
      }
    },
    "/api/CommonSettings/GetOneById": {
      "get": {
        "tags": [
          "CommonSettings"
        ],
        "summary": "Вернуть id одного запрошенного Общие настройки",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, возвращает Общие настройки",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSettingsDto"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/CommonSettings/GetOneByCode": {
      "get": {
        "tags": [
          "CommonSettings"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CommonSettings/Delete": {
      "post": {
        "tags": [
          "CommonSettings"
        ],
        "summary": "Удалить существующую запись с запрошенным id",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Внутренняя ошибка сервера"
          },
          "404": {
            "description": "Неверный запрос"
          },
          "401": {
            "description": "Неавторизованный (неверный токен)"
          }
        }
      }
    },
    "/api/ContactType/AddOrUpdate": {
      "post": {
        "tags": [
          "ContactType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ContactType/GetAll": {
      "get": {
        "tags": [
          "ContactType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ContactType/GetByidCustomSvgIcon": {
      "get": {
        "tags": [
          "ContactType"
        ],
        "parameters": [
          {
            "name": "idCustomSvgIcon",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ContactType/GetOneById": {
      "get": {
        "tags": [
          "ContactType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ContactType/Delete": {
      "post": {
        "tags": [
          "ContactType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetAll": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/AddOrUpdate": {
      "post": {
        "tags": [
          "CustomSubscribtion"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSubscribtionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSubscribtionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSubscribtionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSubscribtionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetOneById": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSubscribtionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSubscribtionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSubscribtionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/Delete": {
      "post": {
        "tags": [
          "CustomSubscribtion"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetByidSubscriberType": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "parameters": [
          {
            "name": "idSubscriberType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetByidSchedule": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "parameters": [
          {
            "name": "idSchedule",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetByidRepeatType": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "parameters": [
          {
            "name": "idRepeatType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetByidDocument": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "parameters": [
          {
            "name": "idDocument",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSubscribtion/GetByidAutoChannel": {
      "get": {
        "tags": [
          "CustomSubscribtion"
        ],
        "parameters": [
          {
            "name": "idAutoChannel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSubscribtionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSvgIcon/AddOrUpdate": {
      "post": {
        "tags": [
          "CustomSvgIcon"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSvgIconModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSvgIconModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSvgIconModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomSvgIconModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSvgIcon/GetAll": {
      "get": {
        "tags": [
          "CustomSvgIcon"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSvgIconDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSvgIconDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSvgIconDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSvgIcon/GetForTable": {
      "get": {
        "tags": [
          "CustomSvgIcon"
        ],
        "parameters": [
          {
            "name": "tableName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSvgIconDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSvgIconDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomSvgIconDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSvgIcon/GetOneById": {
      "get": {
        "tags": [
          "CustomSvgIcon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSvgIconDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSvgIconDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomSvgIconDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomSvgIcon/Delete": {
      "post": {
        "tags": [
          "CustomSvgIcon"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DiagnoseCard/GetAll": {
      "get": {
        "tags": [
          "DiagnoseCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseCard/AddOrUpdate": {
      "post": {
        "tags": [
          "DiagnoseCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseCard/GetOneById": {
      "get": {
        "tags": [
          "DiagnoseCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseCardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseCard/Delete": {
      "post": {
        "tags": [
          "DiagnoseCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DiagnoseCard/GetByidDiagnoseType": {
      "get": {
        "tags": [
          "DiagnoseCard"
        ],
        "parameters": [
          {
            "name": "idDiagnoseType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseCard/GetByidMkb": {
      "get": {
        "tags": [
          "DiagnoseCard"
        ],
        "parameters": [
          {
            "name": "idMkb",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseCard/GetByidCard": {
      "get": {
        "tags": [
          "DiagnoseCard"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseType/AddOrUpdate": {
      "post": {
        "tags": [
          "DiagnoseType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseType/GetAll": {
      "get": {
        "tags": [
          "DiagnoseType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiagnoseTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseType/GetOneById": {
      "get": {
        "tags": [
          "DiagnoseType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/DiagnoseType/Delete": {
      "post": {
        "tags": [
          "DiagnoseType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DifficultyCategory/AddOrUpdate": {
      "post": {
        "tags": [
          "DifficultyCategory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DifficultyCategoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DifficultyCategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DifficultyCategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DifficultyCategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/DifficultyCategory/GetAll": {
      "get": {
        "tags": [
          "DifficultyCategory"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DifficultyCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DifficultyCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DifficultyCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DifficultyCategory/GetOneById": {
      "get": {
        "tags": [
          "DifficultyCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DifficultyCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DifficultyCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DifficultyCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/DifficultyCategory/Delete": {
      "post": {
        "tags": [
          "DifficultyCategory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DocumentType/AddOrUpdate": {
      "post": {
        "tags": [
          "DocumentType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/DocumentType/GetAll": {
      "get": {
        "tags": [
          "DocumentType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DocumentType/GetOneById": {
      "get": {
        "tags": [
          "DocumentType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/DocumentType/Delete": {
      "post": {
        "tags": [
          "DocumentType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/SetSipAccaunt": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "idSipAccaunt",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/AddOrUpdate": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetBrigadeInfo": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/NewSession": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetInfo": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetAll": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetAllActive": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetAllByRole": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetByidSex": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "idSex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/GetOneById": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/LogoutForDispatcher": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/Delete": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/CreateLogin": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLogin"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLogin"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLogin"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/ChangeLogin": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/ResetPassword": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/SetPassword": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/userBlock": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Employee/userUnlock": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeCall/GetAll": {
      "get": {
        "tags": [
          "EmployeeCall"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeCall/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeCall"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCallModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCallModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCallModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCallModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeCall/GetOneById": {
      "get": {
        "tags": [
          "EmployeeCall"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCallDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCallDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCallDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeCall/Delete": {
      "post": {
        "tags": [
          "EmployeeCall"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeCall/GetByidCall": {
      "get": {
        "tags": [
          "EmployeeCall"
        ],
        "parameters": [
          {
            "name": "idCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeCall/GetByidEmployeeWorkShift": {
      "get": {
        "tags": [
          "EmployeeCall"
        ],
        "parameters": [
          {
            "name": "idEmployeeWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCallDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeContact/GetAll": {
      "get": {
        "tags": [
          "EmployeeContact"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeContact/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeContact"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeContactModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeContact/GetOneById": {
      "get": {
        "tags": [
          "EmployeeContact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeContactDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeContactDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeContactDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeContact/Delete": {
      "post": {
        "tags": [
          "EmployeeContact"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeContact/GetByidEmployee": {
      "get": {
        "tags": [
          "EmployeeContact"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeContact/GetByidTypeContact": {
      "get": {
        "tags": [
          "EmployeeContact"
        ],
        "parameters": [
          {
            "name": "idTypeContact",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeContactDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInBrigade/GetAll": {
      "get": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInBrigade/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInBrigadeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInBrigadeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInBrigadeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInBrigadeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInBrigade/GetOneById": {
      "get": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInBrigade/Delete": {
      "post": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeInBrigade/GetByidEmployee": {
      "get": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInBrigade/GetByidBrigade": {
      "get": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInBrigade/CloseEmployeeInBrigade": {
      "post": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeInBrigade/GetByIdBrigadeAndCurrent": {
      "get": {
        "tags": [
          "EmployeeInBrigade"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInNaryad/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeInNaryad"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInNaryadModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInNaryadModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInNaryadModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInNaryadModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInNaryad/GetAll": {
      "get": {
        "tags": [
          "EmployeeInNaryad"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInNaryad/GetOneById": {
      "get": {
        "tags": [
          "EmployeeInNaryad"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInNaryadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInNaryadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInNaryadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInNaryad/Delete": {
      "post": {
        "tags": [
          "EmployeeInNaryad"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeInNaryad/GetByidEmployeeInBrigade": {
      "get": {
        "tags": [
          "EmployeeInNaryad"
        ],
        "parameters": [
          {
            "name": "idEmployeeInBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInNaryad/GetByidNaryad": {
      "get": {
        "tags": [
          "EmployeeInNaryad"
        ],
        "parameters": [
          {
            "name": "idNaryad",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInNaryadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/GetAll": {
      "get": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInWorkShiftModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInWorkShiftModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInWorkShiftModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInWorkShiftModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/GetOneById": {
      "get": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/Delete": {
      "post": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/GetByidPostInWorkShift": {
      "get": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "parameters": [
          {
            "name": "idPostInWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/GetWorkShiftForDispatcher": {
      "get": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/GetByidShift": {
      "get": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "parameters": [
          {
            "name": "idShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeInWorkShift/GetByidEmployee": {
      "get": {
        "tags": [
          "EmployeeInWorkShift"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInWorkShiftDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeRole/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeRole"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRoleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRoleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRoleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRoleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeRole/GetAll": {
      "get": {
        "tags": [
          "EmployeeRole"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeRole/GetOneById": {
      "get": {
        "tags": [
          "EmployeeRole"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeRoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeRoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeRoleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeRole/Delete": {
      "post": {
        "tags": [
          "EmployeeRole"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeRole/GetByidEmployee": {
      "get": {
        "tags": [
          "EmployeeRole"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeRole/GetByidRole": {
      "get": {
        "tags": [
          "EmployeeRole"
        ],
        "parameters": [
          {
            "name": "idRole",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeRoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeSpeciality/GetAll": {
      "get": {
        "tags": [
          "EmployeeSpeciality"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeSpeciality/AddOrUpdate": {
      "post": {
        "tags": [
          "EmployeeSpeciality"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSpecialityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSpecialityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSpecialityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSpecialityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeSpeciality/GetOneById": {
      "get": {
        "tags": [
          "EmployeeSpeciality"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSpecialityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSpecialityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeSpecialityDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeSpeciality/Delete": {
      "post": {
        "tags": [
          "EmployeeSpeciality"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EmployeeSpeciality/GetByidSpeciality": {
      "get": {
        "tags": [
          "EmployeeSpeciality"
        ],
        "parameters": [
          {
            "name": "idSpeciality",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmployeeSpeciality/GetByidEmployee": {
      "get": {
        "tags": [
          "EmployeeSpeciality"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeSpecialityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/AddOrUpdate": {
      "post": {
        "tags": [
          "Event"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/GetAll": {
      "get": {
        "tags": [
          "Event"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/GetOneById": {
      "get": {
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/Delete": {
      "post": {
        "tags": [
          "Event"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EventCallForStep/GetAll": {
      "get": {
        "tags": [
          "EventCallForStep"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EventCallForStep/AddOrUpdate": {
      "post": {
        "tags": [
          "EventCallForStep"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCallForStepModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCallForStepModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCallForStepModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCallForStepModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventCallForStep/GetOneById": {
      "get": {
        "tags": [
          "EventCallForStep"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventCallForStepDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCallForStepDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCallForStepDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventCallForStep/Delete": {
      "post": {
        "tags": [
          "EventCallForStep"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EventCallForStep/GetByidButton": {
      "get": {
        "tags": [
          "EventCallForStep"
        ],
        "parameters": [
          {
            "name": "idButton",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EventCallForStep/GetByidEvent": {
      "get": {
        "tags": [
          "EventCallForStep"
        ],
        "parameters": [
          {
            "name": "idEvent",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCallForStepDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/File/CheckUpdate": {
      "get": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUpdateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUpdateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUpdateModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/File/DownloadLastUpdate": {
      "get": {
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FunctionAccess/AddOrUpdate": {
      "post": {
        "tags": [
          "FunctionAccess"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/FunctionAccess/GetAll": {
      "get": {
        "tags": [
          "FunctionAccess"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionAccessDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionAccessDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionAccessDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FunctionAccess/GetOne": {
      "get": {
        "tags": [
          "FunctionAccess"
        ],
        "parameters": [
          {
            "name": "idRole",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idFunction",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionAccessDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionAccessDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionAccessDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/FunctionAccess/GetByidRole": {
      "get": {
        "tags": [
          "FunctionAccess"
        ],
        "parameters": [
          {
            "name": "idRole",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionAccessDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionAccessDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionAccessDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FunctionAccess/Delete": {
      "post": {
        "tags": [
          "FunctionAccess"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionAccessModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ImageInBlog/AddOrUpdate": {
      "post": {
        "tags": [
          "ImageInBlog"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageInBlogModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageInBlogModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageInBlogModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageInBlogModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ImageInBlog/GetAll": {
      "get": {
        "tags": [
          "ImageInBlog"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ImageInBlog/GetOneById": {
      "get": {
        "tags": [
          "ImageInBlog"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInBlogDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInBlogDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageInBlogDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ImageInBlog/Delete": {
      "post": {
        "tags": [
          "ImageInBlog"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ImageInBlog/GetByidBlog": {
      "get": {
        "tags": [
          "ImageInBlog"
        ],
        "parameters": [
          {
            "name": "idBlog",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ImageInBlog/GetByidFile": {
      "get": {
        "tags": [
          "ImageInBlog"
        ],
        "parameters": [
          {
            "name": "idFile",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageInBlogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/GetAll": {
      "get": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/AddOrUpdate": {
      "post": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionariesCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionariesCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionariesCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionariesCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/AddRange": {
      "post": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NeededInspectionsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeededInspectionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NeededInspectionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NeededInspectionsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/GetOneById": {
      "get": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/Delete": {
      "post": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/GetByidCard": {
      "get": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionariesCard/GetByidInspection": {
      "get": {
        "tags": [
          "InspectionDictionariesCard"
        ],
        "parameters": [
          {
            "name": "idInspection",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionariesCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionary/AddOrUpdate": {
      "post": {
        "tags": [
          "InspectionDictionary"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionary/GetAll": {
      "get": {
        "tags": [
          "InspectionDictionary"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionary/GetByidType": {
      "get": {
        "tags": [
          "InspectionDictionary"
        ],
        "parameters": [
          {
            "name": "idType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionary/GetOneById": {
      "get": {
        "tags": [
          "InspectionDictionary"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionary/Delete": {
      "post": {
        "tags": [
          "InspectionDictionary"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/InspectionDictionaryType/AddOrUpdate": {
      "post": {
        "tags": [
          "InspectionDictionaryType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InspectionDictionaryTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionaryType/GetAll": {
      "get": {
        "tags": [
          "InspectionDictionaryType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionaryType/GetAllWithArray": {
      "get": {
        "tags": [
          "InspectionDictionaryType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionaryType/GetAllWithData": {
      "get": {
        "tags": [
          "InspectionDictionaryType"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionaryType/GetOneById": {
      "get": {
        "tags": [
          "InspectionDictionaryType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InspectionDictionaryTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/InspectionDictionaryType/Delete": {
      "post": {
        "tags": [
          "InspectionDictionaryType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Language/AddOrUpdate": {
      "post": {
        "tags": [
          "Language"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Language/GetAll": {
      "get": {
        "tags": [
          "Language"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Language/GetOneById": {
      "get": {
        "tags": [
          "Language"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Language/Delete": {
      "post": {
        "tags": [
          "Language"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LogicalDocument/AddOrUpdate": {
      "post": {
        "tags": [
          "LogicalDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogicalDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogicalDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogicalDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogicalDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/LogicalDocument/GetAll": {
      "get": {
        "tags": [
          "LogicalDocument"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/LogicalDocument/GetOneById": {
      "get": {
        "tags": [
          "LogicalDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogicalDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogicalDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogicalDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/LogicalDocument/Delete": {
      "post": {
        "tags": [
          "LogicalDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LogicalDocument/DownloadDocument": {
      "get": {
        "tags": [
          "LogicalDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/LogicalDocument/GetByidDocumentType": {
      "get": {
        "tags": [
          "LogicalDocument"
        ],
        "parameters": [
          {
            "name": "idDocumentType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/LogicalDocument/GetByidFile": {
      "get": {
        "tags": [
          "LogicalDocument"
        ],
        "parameters": [
          {
            "name": "idFile",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogicalDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MadeEvents/AddOrUpdate": {
      "post": {
        "tags": [
          "MadeEvents"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MadeEventsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MadeEventsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MadeEventsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MadeEventsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/MadeEvents/GetAll": {
      "get": {
        "tags": [
          "MadeEvents"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MadeEventsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MadeEventsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MadeEventsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MadeEvents/GetOneById": {
      "get": {
        "tags": [
          "MadeEvents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MadeEventsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MadeEventsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MadeEventsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MadeEvents/Delete": {
      "post": {
        "tags": [
          "MadeEvents"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MedCenter/AddOrUpdate": {
      "post": {
        "tags": [
          "MedCenter"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MedCenterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedCenterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MedCenterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MedCenterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedCenter/GetAll": {
      "get": {
        "tags": [
          "MedCenter"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedCenterDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedCenterDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedCenterDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedCenter/GetOneById": {
      "get": {
        "tags": [
          "MedCenter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedCenterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedCenterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedCenterDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedCenter/Delete": {
      "post": {
        "tags": [
          "MedCenter"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MedicalManipulation/AddOrUpdate": {
      "post": {
        "tags": [
          "MedicalManipulation"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalManipulationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalManipulationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalManipulationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalManipulationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalManipulation/GetAll": {
      "get": {
        "tags": [
          "MedicalManipulation"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalManipulationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalManipulationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalManipulationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalManipulation/GetOneById": {
      "get": {
        "tags": [
          "MedicalManipulation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalManipulationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalManipulationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalManipulationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalManipulation/Delete": {
      "post": {
        "tags": [
          "MedicalManipulation"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MedicalTherapy/AddOrUpdate": {
      "post": {
        "tags": [
          "MedicalTherapy"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalTherapyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalTherapyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalTherapyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalTherapyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalTherapy/GetAll": {
      "get": {
        "tags": [
          "MedicalTherapy"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalTherapyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalTherapyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicalTherapyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalTherapy/GetOneById": {
      "get": {
        "tags": [
          "MedicalTherapy"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalTherapyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalTherapyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalTherapyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicalTherapy/Delete": {
      "post": {
        "tags": [
          "MedicalTherapy"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Medicament/AddOrUpdate": {
      "post": {
        "tags": [
          "Medicament"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Medicament/GetAll": {
      "get": {
        "tags": [
          "Medicament"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Medicament/GetByidMedicamentType": {
      "get": {
        "tags": [
          "Medicament"
        ],
        "parameters": [
          {
            "name": "idMedicamentType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Medicament/GetOneById": {
      "get": {
        "tags": [
          "Medicament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedicamentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicamentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicamentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Medicament/Delete": {
      "post": {
        "tags": [
          "Medicament"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Medicament/GetByidUnitType": {
      "get": {
        "tags": [
          "Medicament"
        ],
        "parameters": [
          {
            "name": "idUnitType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicamentType/AddOrUpdate": {
      "post": {
        "tags": [
          "MedicamentType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MedicamentTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicamentType/GetAll": {
      "get": {
        "tags": [
          "MedicamentType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MedicamentTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicamentType/GetOneById": {
      "get": {
        "tags": [
          "MedicamentType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MedicamentTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicamentTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicamentTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MedicamentType/Delete": {
      "post": {
        "tags": [
          "MedicamentType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MKB10/AddOrUpdate": {
      "post": {
        "tags": [
          "MKB10"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MKB10Model"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MKB10Model"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MKB10Model"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MKB10Model"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/MKB10/GetAll": {
      "get": {
        "tags": [
          "MKB10"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MKB10/GetByidParent": {
      "get": {
        "tags": [
          "MKB10"
        ],
        "parameters": [
          {
            "name": "idParent",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MKB10/GetOneById": {
      "get": {
        "tags": [
          "MKB10"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MKB10Dto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MKB10Dto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MKB10Dto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MKB10/Delete": {
      "post": {
        "tags": [
          "MKB10"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MKB10/Search": {
      "get": {
        "tags": [
          "MKB10"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MKB10Dto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/AddOrUpdate": {
      "post": {
        "tags": [
          "NotificationDispatcher"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/GetAllNotDecidedNested": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/GetAll": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/GetAllByType": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/GetOneById": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDispatcherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDispatcherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDispatcherDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/Delete": {
      "post": {
        "tags": [
          "NotificationDispatcher"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/NotificationDispatcher/GetByidNotificationType": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "parameters": [
          {
            "name": "idNotificationType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/GetByidEmployee": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/DecideNotification": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcher/DecideNotificationCall": {
      "get": {
        "tags": [
          "NotificationDispatcher"
        ],
        "parameters": [
          {
            "name": "idCall",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcherType/AddOrUpdate": {
      "post": {
        "tags": [
          "NotificationDispatcherType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDispatcherTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcherType/GetAll": {
      "get": {
        "tags": [
          "NotificationDispatcherType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcherType/GetOneById": {
      "get": {
        "tags": [
          "NotificationDispatcherType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDispatcherTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/NotificationDispatcherType/Delete": {
      "post": {
        "tags": [
          "NotificationDispatcherType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Occassioin/AddOrUpdate": {
      "post": {
        "tags": [
          "Occassioin"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OccassioinModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OccassioinModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OccassioinModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OccassioinModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Occassioin/GetAll": {
      "get": {
        "tags": [
          "Occassioin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Occassioin/GetByAllAnswers": {
      "get": {
        "tags": [
          "Occassioin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Occassioin/GetByIdOccassionType": {
      "get": {
        "tags": [
          "Occassioin"
        ],
        "parameters": [
          {
            "name": "IdOccassionType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassioinDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Occassioin/GetOneById": {
      "get": {
        "tags": [
          "Occassioin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OccassioinDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OccassioinDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OccassioinDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Occassioin/Delete": {
      "post": {
        "tags": [
          "Occassioin"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/OccassionType/AddOrUpdate": {
      "post": {
        "tags": [
          "OccassionType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OccassionTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OccassionTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OccassionTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OccassionTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/OccassionType/GetAll": {
      "get": {
        "tags": [
          "OccassionType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassionTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassionTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccassionTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/OccassionType/GetOneById": {
      "get": {
        "tags": [
          "OccassionType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OccassionTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OccassionTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OccassionTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/OccassionType/Delete": {
      "post": {
        "tags": [
          "OccassionType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ParamedicReception/AddOrUpdate": {
      "post": {
        "tags": [
          "ParamedicReception"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetAll": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetByCurrentWorkShift": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetByidWorkShift": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "idWorkShift",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/setIsOk": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/changeMedCenter": {
      "post": {
        "tags": [
          "ParamedicReception"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenterParamedic"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenterParamedic"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenterParamedic"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMedCenterParamedic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/OkCardsToSendLpu": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetOneById": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParamedicReceptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamedicReceptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamedicReceptionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetPatientById": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/Delete": {
      "post": {
        "tags": [
          "ParamedicReception"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ParamedicReception/GetByidEmployee": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "idEmployee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/SetIdCard": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetByidCard": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetByidPatient": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "idPatient",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReception/GetByidTypeAssistance": {
      "get": {
        "tags": [
          "ParamedicReception"
        ],
        "parameters": [
          {
            "name": "idTypeAssistance",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReceptionDiagnos/AddOrUpdate": {
      "post": {
        "tags": [
          "ParamedicReceptionDiagnos"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionDiagnosModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionDiagnosModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionDiagnosModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParamedicReceptionDiagnosModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReceptionDiagnos/GetAll": {
      "get": {
        "tags": [
          "ParamedicReceptionDiagnos"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReceptionDiagnos/GetOneById": {
      "get": {
        "tags": [
          "ParamedicReceptionDiagnos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReceptionDiagnos/Delete": {
      "post": {
        "tags": [
          "ParamedicReceptionDiagnos"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ParamedicReceptionDiagnos/GetByidMkb": {
      "get": {
        "tags": [
          "ParamedicReceptionDiagnos"
        ],
        "parameters": [
          {
            "name": "idMkb",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParamedicReceptionDiagnos/GetByidParamedicReception": {
      "get": {
        "tags": [
          "ParamedicReceptionDiagnos"
        ],
        "parameters": [
          {
            "name": "idParamedicReception",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamedicReceptionDiagnosDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Patient/AddOrUpdate": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatientModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatientModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Patient/GetAll": {
      "get": {
        "tags": [
          "Patient"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Patient/GetByidSex": {
      "get": {
        "tags": [
          "Patient"
        ],
        "parameters": [
          {
            "name": "idSex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Patient/GetOneById": {
      "get": {
        "tags": [
          "Patient"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Patient/Delete": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PbxIntegration": {
      "get": {
        "tags": [
          "PbxIntegration"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "PbxIntegration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PerformedMedicalManipulation/GetAll": {
      "get": {
        "tags": [
          "PerformedMedicalManipulation"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulation/AddOrUpdate": {
      "post": {
        "tags": [
          "PerformedMedicalManipulation"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulation/GetOneById": {
      "get": {
        "tags": [
          "PerformedMedicalManipulation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulation/Delete": {
      "post": {
        "tags": [
          "PerformedMedicalManipulation"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PerformedMedicalManipulation/GetByidMedicalManipulation": {
      "get": {
        "tags": [
          "PerformedMedicalManipulation"
        ],
        "parameters": [
          {
            "name": "idMedicalManipulation",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulation/GetByidCallCard": {
      "get": {
        "tags": [
          "PerformedMedicalManipulation"
        ],
        "parameters": [
          {
            "name": "idCallCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulationFeldsher/AddOrUpdate": {
      "post": {
        "tags": [
          "PerformedMedicalManipulationFeldsher"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulationFeldsher/GetAll": {
      "get": {
        "tags": [
          "PerformedMedicalManipulationFeldsher"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulationFeldsher/GetOneById": {
      "get": {
        "tags": [
          "PerformedMedicalManipulationFeldsher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulationFeldsher/Delete": {
      "post": {
        "tags": [
          "PerformedMedicalManipulationFeldsher"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PerformedMedicalManipulationFeldsher/GetByidMedicalManipulation": {
      "get": {
        "tags": [
          "PerformedMedicalManipulationFeldsher"
        ],
        "parameters": [
          {
            "name": "idMedicalManipulation",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PerformedMedicalManipulationFeldsher/GetByidParamedicReception": {
      "get": {
        "tags": [
          "PerformedMedicalManipulationFeldsher"
        ],
        "parameters": [
          {
            "name": "idParamedicReception",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformedMedicalManipulationFeldsherDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/AddOrUpdate": {
      "post": {
        "tags": [
          "PhraseForDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhraseForDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhraseForDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhraseForDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhraseForDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/GetAllParents": {
      "get": {
        "tags": [
          "PhraseForDocument"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentParentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentParentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentParentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/GetByidParent": {
      "get": {
        "tags": [
          "PhraseForDocument"
        ],
        "parameters": [
          {
            "name": "idParent",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/GetCategoryById": {
      "get": {
        "tags": [
          "PhraseForDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseForDocumentCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseForDocumentCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseForDocumentCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/GetAll": {
      "get": {
        "tags": [
          "PhraseForDocument"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhraseForDocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/GetOneById": {
      "get": {
        "tags": [
          "PhraseForDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseForDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseForDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhraseForDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PhraseForDocument/Delete": {
      "post": {
        "tags": [
          "PhraseForDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PostInBrigade/AddOrUpdate": {
      "post": {
        "tags": [
          "PostInBrigade"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostInBrigadeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInBrigadeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInBrigadeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostInBrigadeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/PostInBrigade/GetAll": {
      "get": {
        "tags": [
          "PostInBrigade"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInBrigadeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInBrigadeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInBrigadeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PostInBrigade/GetOneById": {
      "get": {
        "tags": [
          "PostInBrigade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostInBrigadeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInBrigadeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInBrigadeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PostInBrigade/Delete": {
      "post": {
        "tags": [
          "PostInBrigade"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PostInWorkShift/AddOrUpdate": {
      "post": {
        "tags": [
          "PostInWorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostInWorkShiftModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInWorkShiftModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInWorkShiftModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostInWorkShiftModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/PostInWorkShift/GetAll": {
      "get": {
        "tags": [
          "PostInWorkShift"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInWorkShiftDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInWorkShiftDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInWorkShiftDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PostInWorkShift/GetOneById": {
      "get": {
        "tags": [
          "PostInWorkShift"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostInWorkShiftDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInWorkShiftDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInWorkShiftDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PostInWorkShift/Delete": {
      "post": {
        "tags": [
          "PostInWorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ProfileType/AddOrUpdate": {
      "post": {
        "tags": [
          "ProfileType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProfileType/GetAll": {
      "get": {
        "tags": [
          "ProfileType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ProfileType/GetOneById": {
      "get": {
        "tags": [
          "ProfileType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProfileType/Delete": {
      "post": {
        "tags": [
          "ProfileType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RejectionReasonHospitalization/AddOrUpdate": {
      "post": {
        "tags": [
          "RejectionReasonHospitalization"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RejectionReasonHospitalizationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectionReasonHospitalizationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectionReasonHospitalizationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RejectionReasonHospitalizationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/RejectionReasonHospitalization/GetAll": {
      "get": {
        "tags": [
          "RejectionReasonHospitalization"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RejectionReasonHospitalizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RejectionReasonHospitalizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RejectionReasonHospitalizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RejectionReasonHospitalization/GetOneById": {
      "get": {
        "tags": [
          "RejectionReasonHospitalization"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RejectionReasonHospitalizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectionReasonHospitalizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectionReasonHospitalizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/RejectionReasonHospitalization/Delete": {
      "post": {
        "tags": [
          "RejectionReasonHospitalization"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RepeatType/AddOrUpdate": {
      "post": {
        "tags": [
          "RepeatType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/RepeatType/GetAll": {
      "get": {
        "tags": [
          "RepeatType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepeatTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepeatTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepeatTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RepeatType/GetOneById": {
      "get": {
        "tags": [
          "RepeatType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RepeatTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepeatTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepeatTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/RepeatType/Delete": {
      "post": {
        "tags": [
          "RepeatType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ResultHospitalization/AddOrUpdate": {
      "post": {
        "tags": [
          "ResultHospitalization"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResultHospitalizationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultHospitalizationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultHospitalizationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResultHospitalizationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ResultHospitalization/GetAll": {
      "get": {
        "tags": [
          "ResultHospitalization"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultHospitalizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultHospitalizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultHospitalizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ResultHospitalization/GetOneById": {
      "get": {
        "tags": [
          "ResultHospitalization"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultHospitalizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultHospitalizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultHospitalizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ResultHospitalization/Delete": {
      "post": {
        "tags": [
          "ResultHospitalization"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/roDocumentTemplateCategory/AddOrUpdate": {
      "post": {
        "tags": [
          "roDocumentTemplateCategory"
        ],
        "summary": "AddOrUpdate instance of DocumentTemplateCategory",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"name\": \"string\",\r\n       \"description\": \"string\",\r\n       \"code\": \"string\",\r\n       \"queueNumber\": \"int?\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/roDocumentTemplateCategoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/roDocumentTemplateCategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/roDocumentTemplateCategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/roDocumentTemplateCategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/roDocumentTemplateCategory/GetAll": {
      "get": {
        "tags": [
          "roDocumentTemplateCategory"
        ],
        "summary": "Returns all DocumentTemplateCategory",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/roDocumentTemplateCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/roDocumentTemplateCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/roDocumentTemplateCategoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/roDocumentTemplateCategory/GetOneById": {
      "get": {
        "tags": [
          "roDocumentTemplateCategory"
        ],
        "summary": "Return one record of DocumentTemplateCategory",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns record of DocumentTemplateCategory with requested id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/roDocumentTemplateCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/roDocumentTemplateCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/roDocumentTemplateCategoryDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/roDocumentTemplateCategory/Delete": {
      "post": {
        "tags": [
          "roDocumentTemplateCategory"
        ],
        "summary": "Delete record of DocumentTemplateCategory with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/RouteHospitalization/GetAll": {
      "get": {
        "tags": [
          "RouteHospitalization"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteHospitalizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteHospitalizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteHospitalizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RouteHospitalization/AddOrUpdate": {
      "post": {
        "tags": [
          "RouteHospitalization"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteHospitalizationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteHospitalizationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteHospitalizationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteHospitalizationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/RouteHospitalization/GetOneById": {
      "get": {
        "tags": [
          "RouteHospitalization"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RouteHospitalizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteHospitalizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteHospitalizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/RouteHospitalization/Delete": {
      "post": {
        "tags": [
          "RouteHospitalization"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RouteHospitalization/GetByidCard": {
      "get": {
        "tags": [
          "RouteHospitalization"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteHospitalizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteHospitalizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteHospitalizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/s_Dashboard/AddOrUpdate": {
      "post": {
        "tags": [
          "s_Dashboard"
        ],
        "summary": "AddOrUpdate instance of s_Dashboard",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"id\": \"int\"\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"width\": \"int\",\r\n                    \"height\": \"int\",\r\n                    \"idDashboardType\":\"int?\",\r\n                    \"idOwner\": \"int?\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DashboardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DashboardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DashboardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DashboardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Dashboard/GetAll": {
      "get": {
        "tags": [
          "s_Dashboard"
        ],
        "summary": "Return all recorded s_Dashboard",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, returns list of s_DBMS",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DashboardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/s_Dashboard/GetByidDashboardType": {
      "get": {
        "tags": [
          "s_Dashboard"
        ],
        "summary": "Returns all s_Dashboard with requested idDashboardType",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idDashboardType\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idDashboardType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DashboardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Dashboard/GetOneById": {
      "get": {
        "tags": [
          "s_Dashboard"
        ],
        "summary": "Delete record of s_Dashboard with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_DashboardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DashboardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DashboardDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Dashboard/Delete": {
      "post": {
        "tags": [
          "s_Dashboard"
        ],
        "summary": "Delete record of s_QueryType with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DBMS/AddOrUpdate": {
      "post": {
        "tags": [
          "s_DBMS"
        ],
        "summary": "Add Or Update instance of s_DBMS",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"id\": \"int\"\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"code\": \"string\",\r\n                    \"queueNumber\": \"int?\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DBMSModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DBMSModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DBMSModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DBMSModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DBMS/GetAll": {
      "get": {
        "tags": [
          "s_DBMS"
        ],
        "summary": "Return all recorded s_DBMS",
        "description": "Sample request:",
        "responses": {
          "200": {
            "description": "Ok, returns list of s_DBMS",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DBMSDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DBMSDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DBMSDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/s_DBMS/GetOneById": {
      "get": {
        "tags": [
          "s_DBMS"
        ],
        "summary": "Return one s_DBMS",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns s_DBMS",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_DBMSDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DBMSDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DBMSDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "404": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          }
        }
      }
    },
    "/api/s_DBMS/Delete": {
      "post": {
        "tags": [
          "s_DBMS"
        ],
        "summary": "Delete existing record",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns s_DBMS"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "404": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          }
        }
      }
    },
    "/api/s_DocumentTemplate/AddOrUpdate": {
      "post": {
        "tags": [
          "s_DocumentTemplate"
        ],
        "summary": "AddOrUpdate instance of s_DocumentTemplate",
        "description": "Sample of post data\r\n            \r\n    {\r\n       id: 0\r\n       name: \"New Document\",\r\n       description: \"description\",\r\n       code: \"Doc01\",\r\n       queueNumber: 1,\r\n       idCustomSvgIcon: 1,\r\n       iconColor: \"FFFF\",\r\n       idDocumentTyplateType: 2,\r\n       useDiagnos: false,\r\n       Specialitys: [1,2,3]\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplate/GetAll": {
      "get": {
        "tags": [
          "s_DocumentTemplate"
        ],
        "summary": "Returns all s_DocumentTemplate",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplate/GetAllTemplate": {
      "get": {
        "tags": [
          "s_DocumentTemplate"
        ],
        "summary": "Returns list s_DocumentTemplate with s_DocumentTemplateTranslation in \"RU\" language",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplate/GetOneById": {
      "get": {
        "tags": [
          "s_DocumentTemplate"
        ],
        "summary": "Return one record of s_DocumentTemplate",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns record of DocumentTemplateCategory with requested id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplate/Delete": {
      "post": {
        "tags": [
          "s_DocumentTemplate"
        ],
        "summary": "Delete record of s_DocumentTemplate with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/AddOrUpdate": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "AddOrUpdate instance of s_DocumentTemplateTranslation",
        "description": "Sample of post data\r\n            \r\n    {\r\n       id: 0\r\n       template: \"<p>русский перевод test</p>\",\r\n       idDocumentTemplate: 20,\r\n       idLanguage: 2\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateTranslationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateTranslationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateTranslationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_DocumentTemplateTranslationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetAll": {
      "get": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Returns all s_DocumentTemplateTranslation",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetSubscription": {
      "get": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Returns all s_DocumentTemplateTranslation available for subscribtion",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetByidDocumentTemplate": {
      "get": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Returns all s_DocumentTemplateTranslation with requested idDocumentTemplate",
        "description": "Request parameters\r\n            \r\n    {\r\n       idDocumentTemplate: 4\r\n    }",
        "parameters": [
          {
            "name": "idDocumentTemplate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetByidLanguageAndIdTemplate": {
      "get": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Returns all s_DocumentTemplateTranslation with requested idLanguage",
        "description": "Request parameters\r\n            \r\n    {\r\n       idLanguage: 2\r\n    }",
        "parameters": [
          {
            "name": "idLanguage",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTemplate",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetOneById": {
      "get": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Delete record of s_DocumentTemplateTranslation with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_DocumentTemplateTranslationDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/Delete": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Delete record of s_DocumentTemplateTranslation with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetFilledTemplate": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Returns Object { template = html, code = \"template\" }, where html is string in html format that contains the body \r\nof document with all placeholders. \r\ntemplate parameter is id of requested s_DocumentTemplateTranslation",
        "description": "Request parameters\r\n            \r\n    {\r\n       template: 1\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns object { template = html, code = \"template\" }"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetFilledTemplateByCode": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetFilledDocumentHtml": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "generates filled document with all placeholders",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/ConvertPdfByDocument": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Generate Document in pdf format, return guid id this document",
        "description": "Sample of post data\r\n            \r\n    {\r\n       idTemplate: 4\r\n       html: \"string\",\r\n       fileName: \"testFile.pdf\",\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns object { template = html, code = \"template\" }"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/GetTempFile": {
      "get": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Donload file with requested guid",
        "description": "Sample of requesrtdata\r\n            \r\n    {\r\n       guid: \"22345200-abe8-4f60-90c8-0d43c5f6c0f6\",\r\n       fileName: \"example.pdf\"\r\n    }",
        "parameters": [
          {
            "name": "guid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns object { template = html, code = \"template\" }"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_DocumentTemplateTranslation/ConvertToPdf": {
      "post": {
        "tags": [
          "s_DocumentTemplateTranslation"
        ],
        "summary": "Convert Document in pdf format, return guid id this document",
        "description": "Sample of post data\r\n            \r\n    {\r\n       idTemplate: 20\r\n       html: \"<p>Text in html format</p>\",\r\n       fileName: \"string\",\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocModelWithHtml"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns object { template = html, code = \"template\" }"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Gadget/AddOrUpdate": {
      "post": {
        "tags": [
          "s_Gadget"
        ],
        "summary": "Add Or Update instance of s_Gadget",
        "description": "<param name=\"model\"></param>\r\n             Sample of post data\r\n            \r\n                 {\r\n                    \"id\": \"int\"\r\n                    \"name\": \"string\",\r\n                    \"description\": \"string\",\r\n                    \"className\": \"string\",\r\n                    \"nameSpace\": \"string\",\r\n                    \"refreshRate\": \"int\",\r\n                    \"blankJSON\": \"string\",\r\n                    \"idLibrary\": \"int\"\r\n                 }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Gadget/GetAll": {
      "get": {
        "tags": [
          "s_Gadget"
        ],
        "summary": "Returns all s_Gadget",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Gadget/GetByidLibrary": {
      "get": {
        "tags": [
          "s_Gadget"
        ],
        "summary": "Returns all s_Gadget with requested idLibrary",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idLibrary\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idLibrary",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Gadget/GetOneById": {
      "get": {
        "tags": [
          "s_Gadget"
        ],
        "summary": "Delete record of s_Gadget with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Gadget/Delete": {
      "post": {
        "tags": [
          "s_Gadget"
        ],
        "summary": "Delete record of s_Gadget with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetAll": {
      "get": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Returns all s_GadgetType",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/AddOrUpdate": {
      "post": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Add Or Update instance of s_GadgetInDashboard",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"coordX\": \"int\",\r\n       \"coordY\": \"int\",\r\n       \"width\": \"int\",\r\n       \"height\": \"int\",\r\n       \"filledJSON\": \"string\",\r\n       \"idDashboard\": \"int\",\r\n       \"idGadgetType\": \"int\",\r\n       \"idQuery\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetInDashboardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetInDashboardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetInDashboardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetInDashboardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetOneById": {
      "get": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Return record of s_GadgetInDashboard with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/Delete": {
      "post": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Delete record of s_GadgetInDashboard with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetByidDashboard": {
      "get": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Returns all s_GadgetInDashboard with requested idDashboard",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idDashboard\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idDashboard",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetByidDashboardToPublic": {
      "get": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetByidGadgetType": {
      "get": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Returns all s_GadgetInDashboard with requested idGadgetType",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idGadgetType\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idGadgetType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetByidQuery": {
      "get": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Returns all s_GadgetInDashboard with requested idQuery",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idQuery\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idQuery",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetInDashboardDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetStringByidQuery": {
      "post": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "summary": "Returns serialised json string - result of executed SQL query with requested idQuery and parameters",
        "description": "Sample of post data\r\n            \r\n    {\r\n        idQuery: int,\r\n        parameters : Dictionary(string, object)\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetInDashboard/GetStringByQueryCode": {
      "post": {
        "tags": [
          "s_GadgetInDashboard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/s_GadgetType/AddOrUpdate": {
      "post": {
        "tags": [
          "s_GadgetType"
        ],
        "summary": "Add Or Update instance of s_GadgetType",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"name\": \"string\",\r\n       \"description\": \"string\",\r\n       \"code\": \"string\",\r\n       \"queueNumber\": \"int?\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_GadgetTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetType/GetAll": {
      "get": {
        "tags": [
          "s_GadgetType"
        ],
        "summary": "Returns all s_GadgetType",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_GadgetTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetType/GetOneById": {
      "get": {
        "tags": [
          "s_GadgetType"
        ],
        "summary": "Return record of s_GadgetType with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_GadgetTypeDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_GadgetType/Delete": {
      "post": {
        "tags": [
          "s_GadgetType"
        ],
        "summary": "Delete record of s_GadgetType with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceholderGroup/AddOrUpdate": {
      "post": {
        "tags": [
          "s_PlaceholderGroup"
        ],
        "summary": "AddOrUpdate instance of s_PlaceholderGroup",
        "description": "Sample of post data\r\n            \r\n    {\r\n       id: 0,\r\n       name: \"new name\",\r\n       description:\"description\",\r\n       code:\"code01\",\r\n       queueNumber: 2,\r\n       idCustomSvgIcon:1,\r\n       iconColor:\"FFF\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceholderGroupModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceholderGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceholderGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceholderGroupModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceholderGroup/GetAll": {
      "get": {
        "tags": [
          "s_PlaceholderGroup"
        ],
        "summary": "Returns all s_PlaceholderGroup",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceholderGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceholderGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceholderGroupDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceholderGroup/GetOneById": {
      "get": {
        "tags": [
          "s_PlaceholderGroup"
        ],
        "summary": "Delete record of s_PlaceholderGroup with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceholderGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceholderGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceholderGroupDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceholderGroup/Delete": {
      "post": {
        "tags": [
          "s_PlaceholderGroup"
        ],
        "summary": "Delete record of s_PlaceholderGroup with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderGroupsMtm/GetAll": {
      "get": {
        "tags": [
          "s_PlaceHolderGroupsMtm"
        ],
        "summary": "Returns all s_PlaceHolderGroupsMtm",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderGroupsMtm/AddOrUpdate": {
      "post": {
        "tags": [
          "s_PlaceHolderGroupsMtm"
        ],
        "summary": "Add Or Update instance of s_PlaceHolderGroupsMtm",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\",\r\n       \"idPlaceHolder\": \"int?\",\r\n       \"idTypePlaceholder\":\"int?\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderGroupsMtm/GetOneById": {
      "get": {
        "tags": [
          "s_PlaceHolderGroupsMtm"
        ],
        "summary": "Delete record of s_PlaceHolderGroupsMtm with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderGroupsMtm/Delete": {
      "post": {
        "tags": [
          "s_PlaceHolderGroupsMtm"
        ],
        "summary": "Delete record of s_PlaceholderGroup with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderGroupsMtm/GetByidPlaceHolder": {
      "get": {
        "tags": [
          "s_PlaceHolderGroupsMtm"
        ],
        "summary": "Returns all s_PlaceholderGroup with requested idPlaceHolder",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idPlaceHolder\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idPlaceHolder",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderGroupsMtm/GetByidTypePlaceholder": {
      "get": {
        "tags": [
          "s_PlaceHolderGroupsMtm"
        ],
        "summary": "Returns all s_PlaceholderGroup with requested idTypePlaceholder",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idTypePlaceholder\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idTypePlaceholder",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderTemplate/AddOrUpdate": {
      "post": {
        "tags": [
          "s_PlaceHolderTemplate"
        ],
        "summary": "Add Or Update instance of s_PlaceHolderTemplate and conected s_PlaceHolderGroupsMtms",
        "description": "Sample of post data:\r\n            \r\n    {\r\n       id: 0,\r\n       name: \"new name\",\r\n       description: \"description\",\r\n       code: \"PHG01\",\r\n       s_PlaceHolderGroupsMtms: List<s_PlaceHolderGroupsMtmModel />,\r\n       idQuery: 1,\r\n    }\r\n    \r\nSample of s_PlaceHolderGroupsMtmModel:\r\n \r\n    {\r\n        id:1,\r\n        idPlaceHolder:1,\r\n        idTypePlaceholder:1\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderTemplateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_PlaceHolderTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderTemplate/GetAll": {
      "get": {
        "tags": [
          "s_PlaceHolderTemplate"
        ],
        "summary": "Returns all s_PlaceHolderTemplate",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderTemplate/GetByidQuery": {
      "get": {
        "tags": [
          "s_PlaceHolderTemplate"
        ],
        "summary": "Returns all s_PlaceHolderTemplate with requested idQuery",
        "description": "Request parameters\r\n            \r\n    {\r\n       idQuery: 1\r\n    }",
        "parameters": [
          {
            "name": "idQuery",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderTemplate/GetOneById": {
      "get": {
        "tags": [
          "s_PlaceHolderTemplate"
        ],
        "summary": "Delete record of s_PlaceHolderTemplate with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_PlaceHolderTemplateDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_PlaceHolderTemplate/Delete": {
      "post": {
        "tags": [
          "s_PlaceHolderTemplate"
        ],
        "summary": "Delete record of s_PlaceHolderTemplate with requested id and all s_PlaceHolderGroupsMtm conected to it",
        "description": "Request parameters\r\n            \r\n    {\r\n       id: 1\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueriesDocumentTemplate/GetAll": {
      "get": {
        "tags": [
          "s_QueriesDocumentTemplate"
        ],
        "summary": "Returns all s_QueriesDocumentTemplate",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueriesDocumentTemplate/AddOrUpdate": {
      "post": {
        "tags": [
          "s_QueriesDocumentTemplate"
        ],
        "summary": "Add Or Update instance of s_QueriesDocumentTemplate",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"idDocumentTemplate\": \"int\",\r\n       \"idQuery\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueriesDocumentTemplateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueriesDocumentTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueriesDocumentTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueriesDocumentTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueriesDocumentTemplate/GetOneById": {
      "get": {
        "tags": [
          "s_QueriesDocumentTemplate"
        ],
        "summary": "Delete record of s_QueriesDocumentTemplate with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueriesDocumentTemplate/Delete": {
      "post": {
        "tags": [
          "s_QueriesDocumentTemplate"
        ],
        "summary": "Delete record of s_QueriesDocumentTemplate with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueriesDocumentTemplate/GetByidDocumentTemplate": {
      "get": {
        "tags": [
          "s_QueriesDocumentTemplate"
        ],
        "summary": "Returns all s_QueriesDocumentTemplate with requested idDocumentTemplate",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idDocumentTemplate\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idDocumentTemplate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueriesDocumentTemplate/GetByidQuery": {
      "get": {
        "tags": [
          "s_QueriesDocumentTemplate"
        ],
        "summary": "Returns all s_QueriesDocumentTemplate with requested idQuery",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idQuery\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idQuery",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueriesDocumentTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/AddOrUpdate": {
      "post": {
        "tags": [
          "s_Query"
        ],
        "summary": "Add Or Update instance of s_Query",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"name\": \"string\",\r\n       \"description\": \"string\",\r\n       \"code\": \"string\",\r\n       \"query\": \"string\",\r\n       \"idQueryType\": \"int\",\r\n       \"idDBMS\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/GetAll": {
      "get": {
        "tags": [
          "s_Query"
        ],
        "summary": "Returns all s_Query",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/GetFilters": {
      "get": {
        "tags": [
          "s_Query"
        ],
        "summary": "Returns all s_Query with idQueryTypeNavCode == \"Filter\"",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/GetByidQueryType": {
      "get": {
        "tags": [
          "s_Query"
        ],
        "summary": "Returns all s_Query with requested idQueryType",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idQueryType\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idQueryType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/GetByidDBMS": {
      "get": {
        "tags": [
          "s_Query"
        ],
        "summary": "Returns all s_Query with requested idDBMS",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idDBMS\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idDBMS",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/GetOneById": {
      "get": {
        "tags": [
          "s_Query"
        ],
        "summary": "Delete record of s_Query with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueryDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_Query/Delete": {
      "post": {
        "tags": [
          "s_Query"
        ],
        "summary": "Delete record of s_Query with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueryType/AddOrUpdate": {
      "post": {
        "tags": [
          "s_QueryType"
        ],
        "summary": "Add Or Update instance of s_QueryType",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"name\": \"string\",\r\n       \"description\": \"string\",\r\n       \"code\": \"string\",\r\n       \"queueNumber\": \"int?\",\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_QueryTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueryType/GetAll": {
      "get": {
        "tags": [
          "s_QueryType"
        ],
        "summary": "Returns all s_QueryType",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_QueryTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueryType/GetOneById": {
      "get": {
        "tags": [
          "s_QueryType"
        ],
        "summary": "Return record of s_QueryType with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueryTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueryTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_QueryTypeDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_QueryType/Delete": {
      "post": {
        "tags": [
          "s_QueryType"
        ],
        "summary": "Delete record of s_QueryType with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_TemplateDocumentPlaceholder/GetAll": {
      "get": {
        "tags": [
          "s_TemplateDocumentPlaceholder"
        ],
        "summary": "Returns all s_TemplateDocumentPlaceholder",
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_TemplateDocumentPlaceholder/AddOrUpdate": {
      "post": {
        "tags": [
          "s_TemplateDocumentPlaceholder"
        ],
        "summary": "Add Or Update instance of s_TemplateDocumentPlaceholder",
        "description": "Sample of post data\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n       \"idTemplateDocument\": \"int\",\r\n       \"idPlaceholder\": \"int\",\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok, returns id of Updated/Created record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_TemplateDocumentPlaceholder/GetOneById": {
      "get": {
        "tags": [
          "s_TemplateDocumentPlaceholder"
        ],
        "summary": "Delete record of s_TemplateDocumentPlaceholder with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_TemplateDocumentPlaceholder/Delete": {
      "post": {
        "tags": [
          "s_TemplateDocumentPlaceholder"
        ],
        "summary": "Delete record of s_TemplateDocumentPlaceholder with requested id",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"id\": \"int\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_TemplateDocumentPlaceholder/GetByidTemplateDocument": {
      "get": {
        "tags": [
          "s_TemplateDocumentPlaceholder"
        ],
        "summary": "Returns all s_TemplateDocumentPlaceholder with requested idTemplateDocument",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idTemplateDocument\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idTemplateDocument",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/s_TemplateDocumentPlaceholder/GetByidPlaceholder": {
      "get": {
        "tags": [
          "s_TemplateDocumentPlaceholder"
        ],
        "summary": "Returns all s_TemplateDocumentPlaceholder with requested idPlaceholder",
        "description": "Request parameters\r\n            \r\n    {\r\n       \"idPlaceholder\": \"int\"\r\n    }",
        "parameters": [
          {
            "name": "idPlaceholder",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok, returns List of record",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/s_TemplateDocumentPlaceholderDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unautorised(Wrong token)"
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/ScheduleType/AddOrUpdate": {
      "post": {
        "tags": [
          "ScheduleType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/ScheduleType/GetAll": {
      "get": {
        "tags": [
          "ScheduleType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ScheduleType/GetOneById": {
      "get": {
        "tags": [
          "ScheduleType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ScheduleType/Delete": {
      "post": {
        "tags": [
          "ScheduleType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Sex/AddOrUpdate": {
      "post": {
        "tags": [
          "Sex"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SexModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SexModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SexModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SexModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sex/GetAll": {
      "get": {
        "tags": [
          "Sex"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SexDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SexDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SexDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Sex/GetOneById": {
      "get": {
        "tags": [
          "Sex"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SexDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SexDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SexDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sex/Delete": {
      "post": {
        "tags": [
          "Sex"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SipAccaunt/AddOrUpdate": {
      "post": {
        "tags": [
          "SipAccaunt"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SipAccauntModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SipAccauntModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SipAccauntModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SipAccauntModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SipAccaunt/GetAll": {
      "get": {
        "tags": [
          "SipAccaunt"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SipAccauntDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SipAccauntDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SipAccauntDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SipAccaunt/GetOneById": {
      "get": {
        "tags": [
          "SipAccaunt"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SipAccauntDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SipAccauntDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SipAccauntDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/SipAccaunt/Delete": {
      "post": {
        "tags": [
          "SipAccaunt"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Speciality/AddOrUpdate": {
      "post": {
        "tags": [
          "Speciality"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Speciality/GetAll": {
      "get": {
        "tags": [
          "Speciality"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Speciality/GetOneById": {
      "get": {
        "tags": [
          "Speciality"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialityDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Speciality/Delete": {
      "post": {
        "tags": [
          "Speciality"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SpentMedicine/GetAll": {
      "get": {
        "tags": [
          "SpentMedicine"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicine/AddOrUpdate": {
      "post": {
        "tags": [
          "SpentMedicine"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicine/GetOneById": {
      "get": {
        "tags": [
          "SpentMedicine"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpentMedicineDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpentMedicineDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpentMedicineDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicine/Delete": {
      "post": {
        "tags": [
          "SpentMedicine"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SpentMedicine/GetByidMedicament": {
      "get": {
        "tags": [
          "SpentMedicine"
        ],
        "parameters": [
          {
            "name": "idMedicament",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicine/GetByidBrigade": {
      "get": {
        "tags": [
          "SpentMedicine"
        ],
        "parameters": [
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicine/GetByidCard": {
      "get": {
        "tags": [
          "SpentMedicine"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicineParamedicReception/AddOrUpdate": {
      "post": {
        "tags": [
          "SpentMedicineParamedicReception"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineParamedicReceptionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineParamedicReceptionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineParamedicReceptionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SpentMedicineParamedicReceptionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicineParamedicReception/GetAll": {
      "get": {
        "tags": [
          "SpentMedicineParamedicReception"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicineParamedicReception/GetOneById": {
      "get": {
        "tags": [
          "SpentMedicineParamedicReception"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicineParamedicReception/Delete": {
      "post": {
        "tags": [
          "SpentMedicineParamedicReception"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SpentMedicineParamedicReception/GetByidMedicament": {
      "get": {
        "tags": [
          "SpentMedicineParamedicReception"
        ],
        "parameters": [
          {
            "name": "idMedicament",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SpentMedicineParamedicReception/GetByidParamedicReception": {
      "get": {
        "tags": [
          "SpentMedicineParamedicReception"
        ],
        "parameters": [
          {
            "name": "idParamedicReception",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpentMedicineParamedicReceptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StateChangesSick/AddOrUpdate": {
      "post": {
        "tags": [
          "StateChangesSick"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StateChangesSickModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateChangesSickModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StateChangesSickModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StateChangesSickModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/StateChangesSick/GetAll": {
      "get": {
        "tags": [
          "StateChangesSick"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateChangesSickDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateChangesSickDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StateChangesSickDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StateChangesSick/GetOneById": {
      "get": {
        "tags": [
          "StateChangesSick"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StateChangesSickDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateChangesSickDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateChangesSickDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StateChangesSick/Delete": {
      "post": {
        "tags": [
          "StateChangesSick"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/StatisticsIndicator/AddOrUpdate": {
      "post": {
        "tags": [
          "StatisticsIndicator"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicator/GetAll": {
      "get": {
        "tags": [
          "StatisticsIndicator"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicator/GetOneById": {
      "get": {
        "tags": [
          "StatisticsIndicator"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsIndicatorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsIndicatorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsIndicatorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicator/Delete": {
      "post": {
        "tags": [
          "StatisticsIndicator"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/AddOrUpdate": {
      "post": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorInCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorInCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorInCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsIndicatorInCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/DeleteAndAddForCard": {
      "post": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomStatisticsIndicatorCheckbox"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomStatisticsIndicatorCheckbox"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomStatisticsIndicatorCheckbox"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomStatisticsIndicatorCheckbox"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/GetAll": {
      "get": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/GetOneById": {
      "get": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/Delete": {
      "post": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/GetForCheckboxes": {
      "get": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/GetByidCard": {
      "get": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/StatisticsIndicatorInCard/GetByidIndicator": {
      "get": {
        "tags": [
          "StatisticsIndicatorInCard"
        ],
        "parameters": [
          {
            "name": "idIndicator",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticsIndicatorInCardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemLanguage/AddOrUpdate": {
      "post": {
        "tags": [
          "SystemLanguage"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SystemLanguageModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemLanguageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemLanguageModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SystemLanguageModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemLanguage/GetAll": {
      "get": {
        "tags": [
          "SystemLanguage"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemLanguageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemLanguageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemLanguageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemLanguage/GetOneById": {
      "get": {
        "tags": [
          "SystemLanguage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemLanguageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemLanguageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemLanguageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/SystemLanguage/Delete": {
      "post": {
        "tags": [
          "SystemLanguage"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TypeParamedicAssistance/AddOrUpdate": {
      "post": {
        "tags": [
          "TypeParamedicAssistance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeParamedicAssistanceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeParamedicAssistanceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeParamedicAssistanceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeParamedicAssistanceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/TypeParamedicAssistance/GetAll": {
      "get": {
        "tags": [
          "TypeParamedicAssistance"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeParamedicAssistanceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeParamedicAssistanceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeParamedicAssistanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TypeParamedicAssistance/GetOneById": {
      "get": {
        "tags": [
          "TypeParamedicAssistance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TypeParamedicAssistanceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeParamedicAssistanceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeParamedicAssistanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/TypeParamedicAssistance/Delete": {
      "post": {
        "tags": [
          "TypeParamedicAssistance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/UnitType/AddOrUpdate": {
      "post": {
        "tags": [
          "UnitType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/UnitType/GetAll": {
      "get": {
        "tags": [
          "UnitType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/UnitType/GetOneById": {
      "get": {
        "tags": [
          "UnitType"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/UnitType/Delete": {
      "post": {
        "tags": [
          "UnitType"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/UserSession/AddOrUpdate": {
      "post": {
        "tags": [
          "UserSession"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSessionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/UserSession/GetAll": {
      "get": {
        "tags": [
          "UserSession"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSessionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/UserSession/GetOneById": {
      "get": {
        "tags": [
          "UserSession"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/UserSession/Delete": {
      "post": {
        "tags": [
          "UserSession"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WhoCalled/AddOrUpdate": {
      "post": {
        "tags": [
          "WhoCalled"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WhoCalledModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhoCalledModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WhoCalledModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WhoCalledModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/WhoCalled/GetAll": {
      "get": {
        "tags": [
          "WhoCalled"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WhoCalledDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WhoCalledDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WhoCalledDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WhoCalled/GetOneById": {
      "get": {
        "tags": [
          "WhoCalled"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WhoCalledDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhoCalledDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhoCalledDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/WhoCalled/Delete": {
      "post": {
        "tags": [
          "WhoCalled"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WorkflowBrigadeCallStatus/AddOrUpdate": {
      "post": {
        "tags": [
          "WorkflowBrigadeCallStatus"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowBrigadeCallStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowBrigadeCallStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowBrigadeCallStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowBrigadeCallStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkflowBrigadeCallStatus/GetAll": {
      "get": {
        "tags": [
          "WorkflowBrigadeCallStatus"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkflowBrigadeCallStatus/GetOneById": {
      "get": {
        "tags": [
          "WorkflowBrigadeCallStatus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkflowBrigadeCallStatus/Delete": {
      "post": {
        "tags": [
          "WorkflowBrigadeCallStatus"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WorkflowBrigadeCallStatus/GetByidStart": {
      "get": {
        "tags": [
          "WorkflowBrigadeCallStatus"
        ],
        "parameters": [
          {
            "name": "idStart",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkflowBrigadeCallStatus/GetByidEnd": {
      "get": {
        "tags": [
          "WorkflowBrigadeCallStatus"
        ],
        "parameters": [
          {
            "name": "idEnd",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBrigadeCallStatusDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Workplace/AddOrUpdate": {
      "post": {
        "tags": [
          "Workplace"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkplaceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkplaceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkplaceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkplaceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workplace/GetAll": {
      "get": {
        "tags": [
          "Workplace"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkplaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkplaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkplaceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Workplace/GetOneById": {
      "get": {
        "tags": [
          "Workplace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkplaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkplaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkplaceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workplace/Delete": {
      "post": {
        "tags": [
          "Workplace"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WorkShift/AddOrUpdate": {
      "post": {
        "tags": [
          "WorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkShift/CopyWorkShift": {
      "post": {
        "tags": [
          "WorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkShiftModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkShift/GetAll": {
      "get": {
        "tags": [
          "WorkShift"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkShiftDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkShiftDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkShiftDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkShift/GetByIdBrigade": {
      "get": {
        "tags": [
          "WorkShift"
        ],
        "parameters": [
          {
            "name": "IdBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkShift/GetOneById": {
      "get": {
        "tags": [
          "WorkShift"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkShift/GetCurrentWorkShift": {
      "get": {
        "tags": [
          "WorkShift"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkShiftDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/WorkShift/Delete": {
      "post": {
        "tags": [
          "WorkShift"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ZadarmaApi/setAnswerYes": {
      "get": {
        "tags": [
          "ZadarmaApi"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ZadarmaApi/setAnswerNo": {
      "get": {
        "tags": [
          "ZadarmaApi"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idCancelReasonBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ZadarmaApi/SendToDoctor": {
      "get": {
        "tags": [
          "ZadarmaApi"
        ],
        "parameters": [
          {
            "name": "idCard",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idBrigade",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ZadarmaApi/SendNotifications": {
      "get": {
        "tags": [
          "ZadarmaApi"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ZadarmaApi/PostMessage": {
      "post": {
        "tags": [
          "ZadarmaApi"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ZadarmaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminUnitDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название Административной единицы",
            "nullable": true
          },
          "soate": {
            "type": "string",
            "description": "Система обозначений административно-территориальных единиц",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание Административной единицы",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Идентификатор Административной единицы",
            "format": "int32"
          },
          "idParent": {
            "type": "integer",
            "description": "Идентификатор родителя Административной единицы",
            "format": "int32",
            "nullable": true
          },
          "idParentNavName": {
            "type": "string",
            "description": "Строковое значение Идентификатора родителя Административной единицы",
            "nullable": true
          },
          "idUnitType": {
            "type": "integer",
            "description": "Идентификатор Типа Административной единицы",
            "format": "int32"
          },
          "idUnitTypeNavName": {
            "type": "string",
            "description": "Строковое значение Идентификатора родителя Административной единицы",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUnitModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Название Административной единицы",
            "nullable": true,
            "example": "Ош"
          },
          "soate": {
            "type": "string",
            "description": "Система обозначений административно-территориальных единиц",
            "nullable": true,
            "example": ""
          },
          "description": {
            "type": "string",
            "description": "Описание Административной единицы",
            "nullable": true,
            "example": "Город Ош"
          },
          "id": {
            "type": "integer",
            "description": "Идентификатор Административной единицы",
            "format": "int32",
            "example": 1
          },
          "idParent": {
            "type": "integer",
            "description": "Идентификатор родителя Административной единицы",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "idParentNavName": {
            "type": "string",
            "description": "Строковое значение Идентификатора родителя Административной единицы",
            "nullable": true,
            "example": "1"
          },
          "idUnitType": {
            "type": "integer",
            "description": "Идентификатор Типа Административной единицы",
            "format": "int32",
            "example": 2
          },
          "idUnitTypeNavName": {
            "type": "string",
            "description": "Строковое значение Идентификатора Типа Административной единицы",
            "nullable": true,
            "example": "2"
          }
        },
        "additionalProperties": false
      },
      "AdminUnitTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название Типа Административной единицы",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание Типа Административной единицы",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Код Типа Административной единицы",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "description": "Очередь Типа Административной единицы",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Идентификатор Типа Административной единицы",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdminUnitTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Название Типа Административной единицы",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание Типа Административной единицы",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Код Типа Административной единицы",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "description": "Очередь Типа Административной единицы",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Идентификатор Типа Административной единицы",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgeTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор Тип возраста",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Название Тип возраста",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание Тип возраста",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Код Тип возраста",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "description": "Перевод на кыргызский язык названия Тип возраста",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgeTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Идентификатор Тип возраста",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Название Тип возраста",
            "nullable": true,
            "example": "Лет"
          },
          "description": {
            "type": "string",
            "description": "Описание Тип возраста",
            "nullable": true,
            "example": "Для взрослого человека"
          },
          "code": {
            "type": "string",
            "description": "Код Тип возраста",
            "nullable": true,
            "example": "2"
          },
          "nameky": {
            "type": "string",
            "description": "Перевод на кыргызский язык названия Тип возраста",
            "nullable": true,
            "example": "Жаш"
          }
        },
        "additionalProperties": false
      },
      "ApiFunctionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idModule": {
            "type": "integer",
            "format": "int32"
          },
          "idModuleNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiFunctionModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idModule": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppDocumentDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentBody": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "dateCreate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateCreate": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentType": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idFile": {
            "type": "integer",
            "format": "int32"
          },
          "idFileNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppDocumentModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dateCreate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateCreate": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentType": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idFile": {
            "type": "integer",
            "format": "int32"
          },
          "idFileNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppModuleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppModuleModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppRoleCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "foregroundColor": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppRoleCategoryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppealTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppealTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "idAppRoleCategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAppRoleCategoryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationRoleModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idAppRoleCategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAppRoleCategoryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignBrigade": {
        "type": "object",
        "properties": {
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AutoChannelCallSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idButton": {
            "type": "integer",
            "format": "int32"
          },
          "idButtonNavName": {
            "type": "string",
            "nullable": true
          },
          "idAutoChannel": {
            "type": "integer",
            "format": "int32"
          },
          "idAutoChannelNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoChannelCallSettingModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idButton": {
            "type": "integer",
            "format": "int32"
          },
          "idButtonNavName": {
            "type": "string",
            "nullable": true
          },
          "idAutoChannel": {
            "type": "integer",
            "format": "int32"
          },
          "idAutoChannelNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoChannelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplateNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoChannelModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplateNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "idImage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idImageNavName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "shortText": {
            "type": "string",
            "nullable": true
          },
          "titleky": {
            "type": "string",
            "nullable": true
          },
          "textky": {
            "type": "string",
            "nullable": true
          },
          "shortTextky": {
            "type": "string",
            "nullable": true
          },
          "timeRegistered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeRegistered": {
            "type": "string",
            "nullable": true
          },
          "timePublished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimePublished": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeChangeStatusModel": {
        "type": "object",
        "properties": {
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeCoordinateDto": {
        "type": "object",
        "properties": {
          "idBrigadeInCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeStatusCode": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeStatusColor": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeStatusSvgPath": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastOnline": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "strdate": {
            "type": "string",
            "nullable": true
          },
          "strdateWithSecond": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeCoordinateModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeInCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeDto": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "xCoord": {
            "type": "string",
            "nullable": true
          },
          "yCoord": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "color1": {
            "type": "string",
            "nullable": true
          },
          "color2": {
            "type": "string",
            "nullable": true
          },
          "doctorBrigade": {
            "type": "string",
            "nullable": true
          },
          "brigadeComposition": {
            "type": "string",
            "nullable": true
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "timeCoord": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idAndroidEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idCurrentStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCurrentStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idCurrentStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idCar": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCarNavName": {
            "type": "string",
            "nullable": true
          },
          "idSubstation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSubstationNavName": {
            "type": "string",
            "nullable": true
          },
          "idShift": {
            "type": "integer",
            "format": "int32"
          },
          "employeesInBrigade": {
            "type": "string",
            "nullable": true
          },
          "idShiftNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeType": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idProfile": {
            "type": "integer",
            "format": "int32"
          },
          "idProfileNavName": {
            "type": "string",
            "nullable": true
          },
          "idProfileNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idCurrentStatusIconColor": {
            "type": "string",
            "nullable": true
          },
          "idCurrentStatusIconSvg": {
            "type": "string",
            "nullable": true
          },
          "kef": {
            "type": "number",
            "format": "double"
          },
          "distance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastBrigadeInCall": {
            "$ref": "#/components/schemas/BrigadeInCallDto"
          }
        },
        "additionalProperties": false
      },
      "BrigadeEventDto": {
        "type": "object",
        "properties": {
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateStart": {
            "type": "string",
            "nullable": true
          },
          "dateFinish": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateFinish": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeInCall": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeInCallNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeEventModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateStart": {
            "type": "string",
            "nullable": true
          },
          "dateFinish": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateFinish": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeInCall": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeInCallNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeEventTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeEventTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallCardHistoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeInCall": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeInCallNavName": {
            "type": "string",
            "nullable": true
          },
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallCardHistoryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeInCall": {
            "type": "integer",
            "format": "int32"
          },
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallDto": {
        "type": "object",
        "properties": {
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          },
          "isCancelled": {
            "type": "boolean",
            "nullable": true
          },
          "cancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "delayStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arriveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strarriveDate": {
            "type": "string",
            "nullable": true
          },
          "otzvonDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strreturnDate": {
            "type": "string",
            "nullable": true
          },
          "totalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCancelReason": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCancelReasonNavName": {
            "type": "string",
            "nullable": true
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idVideoDocument": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idVideoDocumentNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusCode": {
            "type": "string",
            "nullable": true
          },
          "idSource": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSourceNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassionNavName": {
            "type": "string",
            "nullable": true
          },
          "addressHouseNavName": {
            "type": "string",
            "nullable": true
          },
          "addressFlatNavName": {
            "type": "string",
            "nullable": true
          },
          "phonePatientNavName": {
            "type": "string",
            "nullable": true
          },
          "statusIconColor": {
            "type": "string",
            "nullable": true
          },
          "statusIconSvg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallForSchedulerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strstartDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strendDate": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusCode": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "povod": {
            "type": "string",
            "nullable": true
          },
          "fioPatient": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "callResult": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strapproveDate": {
            "type": "string",
            "nullable": true
          },
          "idSource": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdelayStartDate": {
            "type": "string",
            "nullable": true
          },
          "arriveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strarriveDate": {
            "type": "string",
            "nullable": true
          },
          "otzvonDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strotzvonDate": {
            "type": "string",
            "nullable": true
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strreturnDate": {
            "type": "string",
            "nullable": true
          },
          "totalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtotalDate": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          },
          "isCancelled": {
            "type": "boolean",
            "nullable": true
          },
          "cancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strcancelDate": {
            "type": "string",
            "nullable": true
          },
          "idCancelReason": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idVideoDocument": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallSourceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallSourceModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallStatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeInCallStatusModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "xCoord": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "yCoord": {
            "type": "string",
            "nullable": true
          },
          "timeCoord": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCurrentStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCurrentStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idCar": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCarNavName": {
            "type": "string",
            "nullable": true
          },
          "idSubstation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSubstationNavName": {
            "type": "string",
            "nullable": true
          },
          "idShift": {
            "type": "integer",
            "format": "int32"
          },
          "idShiftNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigadeType": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idProfile": {
            "type": "integer",
            "format": "int32"
          },
          "idProfileNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeStatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "color1": {
            "type": "string",
            "nullable": true
          },
          "color2": {
            "type": "string",
            "nullable": true
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeStatusHistoryDto": {
        "type": "object",
        "properties": {
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusNavNameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeStatusHistoryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeStatusModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "color1": {
            "type": "string",
            "nullable": true
          },
          "color2": {
            "type": "string",
            "nullable": true
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrigadeSubstationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeSubstationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BrigadeTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CallCardDocumentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocument": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardDocumentModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocument": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardDto": {
        "type": "object",
        "properties": {
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFullAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isReferencePoint": {
            "type": "boolean",
            "nullable": true
          },
          "addressNotFound": {
            "type": "boolean",
            "nullable": true
          },
          "isdriverNeedCall": {
            "type": "boolean",
            "nullable": true
          },
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOk": {
            "type": "boolean",
            "nullable": true
          },
          "isSend": {
            "type": "boolean",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "idFeldsher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFeldsherNavName": {
            "type": "string",
            "nullable": true
          },
          "idDispatcher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDispatcherNavName": {
            "type": "string",
            "nullable": true
          },
          "diagnoses": {
            "type": "string",
            "nullable": true
          },
          "hospitalizations": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "idMedCenterTransportation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateRegistration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateRegistration": {
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "addressHouse": {
            "type": "string",
            "nullable": true
          },
          "addressFlat": {
            "type": "string",
            "nullable": true
          },
          "addressEntrance": {
            "type": "string",
            "nullable": true
          },
          "addressFloor": {
            "type": "string",
            "nullable": true
          },
          "addressPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "addressGate": {
            "type": "string",
            "nullable": true
          },
          "addressReferencePoint": {
            "type": "string",
            "nullable": true
          },
          "addressFull": {
            "type": "string",
            "nullable": true
          },
          "isUnknownPatient": {
            "type": "boolean"
          },
          "fioWhoCalled": {
            "type": "string",
            "nullable": true
          },
          "phoneCaller": {
            "type": "string",
            "nullable": true
          },
          "phonePatient": {
            "type": "string",
            "nullable": true
          },
          "brigadeNumberHistory": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "xCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "brigadeSetupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeSetupDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeApproveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeApproveDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeIsCanceled": {
            "type": "boolean",
            "nullable": true
          },
          "brigadeCancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeCancelDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeDelayStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeDelayStartDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeArriveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeArriveDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeOtzvonDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeOtzvonDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeReturnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeReturnDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeTotalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeTotalDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdCancelReason": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeIdCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeIdCancelReasonNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdCancelReasonNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdSource": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeIdSourceNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdSourceNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeNumber": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeidStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatusCode": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "brigadeidType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeidTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeidTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeidProfile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeidProfileNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeidProfileNavNameky": {
            "type": "string",
            "nullable": true
          },
          "isParamedicReception": {
            "type": "boolean",
            "nullable": true
          },
          "hospitalizationDescription": {
            "type": "string",
            "nullable": true
          },
          "doctorOnDuty": {
            "type": "string",
            "nullable": true
          },
          "hospitalizationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strhospitalizationDate": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "cardOccassions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallCardOccassionDto"
            },
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "idSex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "idSexNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idSexCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSexCardNavName": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "signalListNumber": {
            "type": "string",
            "nullable": true
          },
          "signalListTreatment": {
            "type": "string",
            "nullable": true
          },
          "followListNumber": {
            "type": "string",
            "nullable": true
          },
          "complaints": {
            "type": "string",
            "nullable": true
          },
          "brigadeComposition": {
            "type": "string",
            "nullable": true
          },
          "brigadeCompositionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "anamnez": {
            "type": "string",
            "nullable": true
          },
          "ekg": {
            "type": "string",
            "nullable": true
          },
          "additionalObjectiveData": {
            "type": "string",
            "nullable": true
          },
          "assistantProvided": {
            "type": "string",
            "nullable": true
          },
          "controlIndicators": {
            "type": "string",
            "nullable": true
          },
          "aD": {
            "type": "string",
            "nullable": true
          },
          "aDr": {
            "type": "string",
            "nullable": true
          },
          "chSS": {
            "type": "string",
            "nullable": true
          },
          "chD": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "afterAD": {
            "type": "string",
            "nullable": true
          },
          "afterChSS": {
            "type": "string",
            "nullable": true
          },
          "afterChD": {
            "type": "string",
            "nullable": true
          },
          "afterTemperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idWhoCalled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idWhoCalledNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idStatusCode": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColorBrigade": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreviewBrigade": {
            "type": "string",
            "nullable": true
          },
          "idTerritory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedCenter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedCenterNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallResult": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResultNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallResultNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPatientNavName": {
            "type": "string",
            "nullable": true
          },
          "idStateChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStateChangesNavName": {
            "type": "string",
            "nullable": true
          },
          "idStateChangesNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOccassionNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassionNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idAppealType": {
            "type": "integer",
            "format": "int32"
          },
          "idAppealTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idAppealTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idCategoryCito": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCategoryCitoNavName": {
            "type": "string",
            "nullable": true
          },
          "idCategoryCitoNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idProfileType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idProfileTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idProfileTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDifficultyCategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDifficultyCategoryNavName": {
            "type": "string",
            "nullable": true
          },
          "idDifficultyCategoryNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idMadeEvents": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMadeEventsNavName": {
            "type": "string",
            "nullable": true
          },
          "idMadeEventsNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idMedicalTherapy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicalTherapyNavName": {
            "type": "string",
            "nullable": true
          },
          "idExpert": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idExpertNavName": {
            "type": "string",
            "nullable": true
          },
          "expertComments": {
            "type": "string",
            "nullable": true
          },
          "neededExtraHelp": {
            "type": "boolean",
            "nullable": true
          },
          "dateExpertResult": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idAgeTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idAgeTypeCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult2NavName": {
            "type": "string",
            "nullable": true
          },
          "idCallResult3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult3NavName": {
            "type": "string",
            "nullable": true
          },
          "resultDescription": {
            "type": "string",
            "nullable": true
          },
          "resultDescription2": {
            "type": "string",
            "nullable": true
          },
          "resultDescription3": {
            "type": "string",
            "nullable": true
          },
          "updatedFullName": {
            "type": "string",
            "nullable": true
          },
          "updatedAddress": {
            "type": "string",
            "nullable": true
          },
          "dispatcherNumber": {
            "type": "string",
            "nullable": true
          },
          "updatedAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUpdatedAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUpdatedAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "afterSaturation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "idAgeTypeCardNavName": {
            "type": "string",
            "nullable": true
          },
          "strdateExpertResult": {
            "type": "string",
            "nullable": true
          },
          "neededInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionDictionariesCardDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFullAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isReferencePoint": {
            "type": "boolean",
            "nullable": true
          },
          "addressNotFound": {
            "type": "boolean",
            "nullable": true
          },
          "isdriverNeedCall": {
            "type": "boolean",
            "nullable": true
          },
          "idDispatcher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFeldsher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOk": {
            "type": "boolean",
            "nullable": true
          },
          "isSend": {
            "type": "boolean",
            "nullable": true
          },
          "idFeldsherNavName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "idMedCenterTransportation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "neededInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionDictionariesCardModel"
            },
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "dateRegistration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateRegistration": {
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "addressHouse": {
            "type": "string",
            "nullable": true
          },
          "addressFlat": {
            "type": "string",
            "nullable": true
          },
          "addressEntrance": {
            "type": "string",
            "nullable": true
          },
          "isUnknownPatient": {
            "type": "boolean"
          },
          "addressFloor": {
            "type": "string",
            "nullable": true
          },
          "addressPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "addressGate": {
            "type": "string",
            "nullable": true
          },
          "addressReferencePoint": {
            "type": "string",
            "nullable": true
          },
          "fioWhoCalled": {
            "type": "string",
            "nullable": true
          },
          "phoneCaller": {
            "type": "string",
            "nullable": true
          },
          "phonePatient": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "xCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isParamedicReception": {
            "type": "boolean",
            "nullable": true
          },
          "hospitalizationDescription": {
            "type": "string",
            "nullable": true
          },
          "doctorOnDuty": {
            "type": "string",
            "nullable": true
          },
          "hospitalizationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strhospitalizationDate": {
            "type": "string",
            "nullable": true
          },
          "signalListNumber": {
            "type": "string",
            "nullable": true
          },
          "signalListTreatment": {
            "type": "string",
            "nullable": true
          },
          "followListNumber": {
            "type": "string",
            "nullable": true
          },
          "complaints": {
            "type": "string",
            "nullable": true
          },
          "anamnez": {
            "type": "string",
            "nullable": true
          },
          "ekg": {
            "type": "string",
            "nullable": true
          },
          "additionalObjectiveData": {
            "type": "string",
            "nullable": true
          },
          "assistantProvided": {
            "type": "string",
            "nullable": true
          },
          "controlIndicators": {
            "type": "string",
            "nullable": true
          },
          "aD": {
            "type": "string",
            "nullable": true
          },
          "aDr": {
            "type": "string",
            "nullable": true
          },
          "chSS": {
            "type": "string",
            "nullable": true
          },
          "chD": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "afterAD": {
            "type": "string",
            "nullable": true
          },
          "afterChSS": {
            "type": "string",
            "nullable": true
          },
          "afterChD": {
            "type": "string",
            "nullable": true
          },
          "afterTemperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idWhoCalled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idWhoCalledNavName": {
            "type": "string",
            "nullable": true
          },
          "idMedCenter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedCenterNavName": {
            "type": "string",
            "nullable": true
          },
          "idTerritory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResultNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPatientNavName": {
            "type": "string",
            "nullable": true
          },
          "idStateChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStateChangesNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOccassionNavName": {
            "type": "string",
            "nullable": true
          },
          "idAppealType": {
            "type": "integer",
            "format": "int32"
          },
          "idAppealTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idCategoryCito": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCategoryCitoNavName": {
            "type": "string",
            "nullable": true
          },
          "idProfileType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idProfileTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "addressFull": {
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "nullable": true
          },
          "idDifficultyCategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDifficultyCategoryNavName": {
            "type": "string",
            "nullable": true
          },
          "idMadeEvents": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMadeEventsNavName": {
            "type": "string",
            "nullable": true
          },
          "idMedicalTherapy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicalTherapyNavName": {
            "type": "string",
            "nullable": true
          },
          "idExpert": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idExpertNavName": {
            "type": "string",
            "nullable": true
          },
          "expertComments": {
            "type": "string",
            "nullable": true
          },
          "neededExtraHelp": {
            "type": "boolean",
            "nullable": true
          },
          "idCallResult2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultDescription": {
            "type": "string",
            "nullable": true
          },
          "resultDescription2": {
            "type": "string",
            "nullable": true
          },
          "resultDescription3": {
            "type": "string",
            "nullable": true
          },
          "updatedFullName": {
            "type": "string",
            "nullable": true
          },
          "updatedAddress": {
            "type": "string",
            "nullable": true
          },
          "updatedAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUpdatedAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dispatcherNumber": {
            "type": "string",
            "nullable": true
          },
          "occassions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallCardOccassionDto"
            },
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "afterSaturation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dateExpertResult": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateExpertResult": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardOccassionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCallCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCallCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32"
          },
          "idOccassionNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardOccassionModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCallCard": {
            "type": "integer",
            "format": "int32"
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CallCardStatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardStatusHistoryDto": {
        "type": "object",
        "properties": {
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardStatusHistoryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardStatusModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardWorkplaceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idWorkplace": {
            "type": "integer",
            "format": "int32"
          },
          "idWorkplaceNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallCardWorkplaceModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idWorkplace": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CallDto": {
        "type": "object",
        "properties": {
          "timeCall": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOutgoingCall": {
            "type": "boolean",
            "nullable": true
          },
          "strtimeCall": {
            "type": "string",
            "nullable": true
          },
          "duringCall": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strduringCall": {
            "type": "string",
            "nullable": true
          },
          "phoneCaller": {
            "type": "string",
            "nullable": true
          },
          "callGuid": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idAudioCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAudioCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idCallStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "idCallStatusCode": {
            "type": "string",
            "nullable": true
          },
          "dispatcherName": {
            "type": "string",
            "nullable": true
          },
          "idLastEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idlastEmployeeCurrentSip": {
            "type": "string",
            "nullable": true
          },
          "isConsultation": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParentNavName": {
            "type": "string",
            "nullable": true
          },
          "callProcessed": {
            "type": "boolean",
            "nullable": true
          },
          "callCardDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallCardDto"
            },
            "nullable": true
          },
          "lastCallCardInCall": {
            "$ref": "#/components/schemas/CallCardDto"
          }
        },
        "additionalProperties": false
      },
      "CallModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "timeCall": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOutgoingCall": {
            "type": "boolean",
            "nullable": true
          },
          "strtimeCall": {
            "type": "string",
            "nullable": true
          },
          "duringCall": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strduringCall": {
            "type": "string",
            "nullable": true
          },
          "phoneCaller": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idAudioCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAudioCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idCallStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "callGuid": {
            "type": "string",
            "nullable": true
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "callProcessed": {
            "type": "boolean",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallResultDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CallResultModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CallStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallStatusModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelReasonBrigadeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CancelReasonBrigadeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CarDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CarInBrigadeDto": {
        "type": "object",
        "properties": {
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCar": {
            "type": "integer",
            "format": "int32"
          },
          "idCarNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CarInBrigadeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCar": {
            "type": "integer",
            "format": "int32"
          },
          "idCarNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CarModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CardArriveCoord": {
        "type": "object",
        "properties": {
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CardCoords": {
        "type": "object",
        "properties": {
          "occassionName": {
            "type": "string",
            "nullable": true
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categoryCito": {
            "type": "string",
            "nullable": true
          },
          "appealType": {
            "type": "string",
            "nullable": true
          },
          "profile": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resultCall": {
            "type": "string",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arrivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strregistrationDate": {
            "type": "string",
            "nullable": true
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "xCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardForSiteDto": {
        "type": "object",
        "properties": {
          "occassionName": {
            "type": "string",
            "nullable": true
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strregistrationDate": {
            "type": "string",
            "nullable": true
          },
          "appealType": {
            "type": "string",
            "nullable": true
          },
          "profile": {
            "type": "string",
            "nullable": true
          },
          "brigadeNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "categoryCito": {
            "type": "string",
            "nullable": true
          },
          "resultCall": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryCitoDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CategoryCitoModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChangeMedCenter": {
        "type": "object",
        "properties": {
          "idMedCenter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChangeMedCenterParamedic": {
        "type": "object",
        "properties": {
          "idMedCenter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CheckUpdateModel": {
        "type": "object",
        "properties": {
          "need": {
            "type": "boolean"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommonSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueky": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommonSettingsModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueky": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomStatisticsIndicatorCheckbox": {
        "type": "object",
        "properties": {
          "statisticsIndicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsIndicatorInCardModel"
            },
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomSubscribtionDto": {
        "type": "object",
        "properties": {
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idSubscriberType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSubscriberTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idSchedule": {
            "type": "integer",
            "format": "int32"
          },
          "idScheduleNavName": {
            "type": "string",
            "nullable": true
          },
          "idRepeatType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idRepeatTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "sendEmpty": {
            "type": "boolean",
            "nullable": true
          },
          "timeStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStart": {
            "type": "string",
            "nullable": true
          },
          "timeEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEnd": {
            "type": "string",
            "nullable": true
          },
          "monday": {
            "type": "boolean",
            "nullable": true
          },
          "tuesday": {
            "type": "boolean",
            "nullable": true
          },
          "wednesday": {
            "type": "boolean",
            "nullable": true
          },
          "thursday": {
            "type": "boolean",
            "nullable": true
          },
          "friday": {
            "type": "boolean",
            "nullable": true
          },
          "saturday": {
            "type": "boolean",
            "nullable": true
          },
          "sunday": {
            "type": "boolean",
            "nullable": true
          },
          "dateOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weekOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "idDocument": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDocumentNavName": {
            "type": "string",
            "nullable": true
          },
          "idFIlterPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFIlterPatientNavName": {
            "type": "string",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPatientNavName": {
            "type": "string",
            "nullable": true
          },
          "idFilterEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFilterEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "activeDateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stractiveDateStart": {
            "type": "string",
            "nullable": true
          },
          "activeDateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stractiveDateEnd": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomSubscribtionModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSubscriberType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSchedule": {
            "type": "integer",
            "format": "int32"
          },
          "idRepeatType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sendEmpty": {
            "type": "boolean",
            "nullable": true
          },
          "timeStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStart": {
            "type": "string",
            "nullable": true
          },
          "timeEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEnd": {
            "type": "string",
            "nullable": true
          },
          "monday": {
            "type": "boolean",
            "nullable": true
          },
          "tuesday": {
            "type": "boolean",
            "nullable": true
          },
          "wednesday": {
            "type": "boolean",
            "nullable": true
          },
          "thursday": {
            "type": "boolean",
            "nullable": true
          },
          "friday": {
            "type": "boolean",
            "nullable": true
          },
          "saturday": {
            "type": "boolean",
            "nullable": true
          },
          "sunday": {
            "type": "boolean",
            "nullable": true
          },
          "dateOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weekOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "idDocument": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFIlterPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFilterEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activeDateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stractiveDateStart": {
            "type": "string",
            "nullable": true
          },
          "activeDateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stractiveDateEnd": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "contactTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomSvgIconDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "svgPath": {
            "type": "string",
            "nullable": true
          },
          "usedTables": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomSvgIconModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "svgPath": {
            "type": "string",
            "nullable": true
          },
          "usedTables": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DashboardDataRequest": {
        "type": "object",
        "properties": {
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "queryCode": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiagnoseCardDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDiagnoseType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDiagnoseTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idMkb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMkbNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "askSeniorDoctor": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiagnoseCardModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDiagnoseType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDiagnoseTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idMkb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMkbNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "askSeniorDoctor": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiagnoseTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DiagnoseTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DifficultyCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DifficultyCategoryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocModelWithHtml": {
        "type": "object",
        "properties": {
          "idTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "templateCode": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeCallDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strstartTime": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strendTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployeeWorkShift": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEmployeeWorkShiftNavName": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "employeePost": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeCallModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strstartTime": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strendTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployeeWorkShift": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEmployeeWorkShiftNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeContactDto": {
        "type": "object",
        "properties": {
          "contact": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idTypeContact": {
            "type": "integer",
            "format": "int32"
          },
          "idTypeContactNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeContactModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idTypeContact": {
            "type": "integer",
            "format": "int32"
          },
          "idTypeContactNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeDto": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "currentSip": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "idSexNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idSipAccaunt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSipAccauntNavName": {
            "type": "string",
            "nullable": true
          },
          "idSipAccauntCode": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "idTypeContact": {
            "type": "integer",
            "format": "int32"
          },
          "idTypeContactNavName": {
            "type": "string",
            "nullable": true
          },
          "specialitiesNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "neededSpecialties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeSpecialityDto"
            },
            "nullable": true
          },
          "applicationRolesNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "applicationRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationRoleDto"
            },
            "nullable": true
          },
          "neededApplicationRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeRoleDto"
            },
            "nullable": true
          },
          "roles": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeInBrigadeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "clearOld": {
            "type": "boolean"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "idRoleNavName": {
            "type": "string",
            "nullable": true
          },
          "idShift": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeWorkShift": {
            "type": "integer",
            "format": "int32"
          },
          "timeStartPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartPlan": {
            "type": "string",
            "nullable": true
          },
          "timeEndPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndPlan": {
            "type": "string",
            "nullable": true
          },
          "timeStartFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartFact": {
            "type": "string",
            "nullable": true
          },
          "timeEndFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndFact": {
            "type": "string",
            "nullable": true
          },
          "brigadeIsActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeInBrigadeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "clearOld": {
            "type": "boolean",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "timeStartPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartPlan": {
            "type": "string",
            "nullable": true
          },
          "timeEndPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndPlan": {
            "type": "string",
            "nullable": true
          },
          "timeStartFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartFact": {
            "type": "string",
            "nullable": true
          },
          "timeEndFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndFact": {
            "type": "string",
            "nullable": true
          },
          "idPostInWorkShift": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeWorkShift": {
            "type": "integer",
            "format": "int32"
          },
          "idShift": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeInNaryadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeInBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeInBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idNaryad": {
            "type": "integer",
            "format": "int32"
          },
          "idNaryadNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeInNaryadModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeInBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idNaryad": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeInWorkShiftDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "idRoleNavName": {
            "type": "string",
            "nullable": true
          },
          "idShift": {
            "type": "integer",
            "format": "int32"
          },
          "idShiftNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "timeStartPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartPlan": {
            "type": "string",
            "nullable": true
          },
          "timeEndPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndPlan": {
            "type": "string",
            "nullable": true
          },
          "timeStartFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartFact": {
            "type": "string",
            "nullable": true
          },
          "timeEndFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dispatcherNumber": {
            "type": "string",
            "nullable": true
          },
          "strtimeEndFact": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeInWorkShiftModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "idRoleNavName": {
            "type": "string",
            "nullable": true
          },
          "idShift": {
            "type": "integer",
            "format": "int32"
          },
          "idShiftNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "dispatcherNumber": {
            "type": "string",
            "nullable": true
          },
          "timeStartPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartPlan": {
            "type": "string",
            "nullable": true
          },
          "timeEndPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndPlan": {
            "type": "string",
            "nullable": true
          },
          "timeStartFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeStartFact": {
            "type": "string",
            "nullable": true
          },
          "timeEndFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeEndFact": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeLogin": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "idSipAccaunt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "neededSpecialties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeSpecialityModel"
            },
            "nullable": true
          },
          "neededApplicationRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeRoleModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "idRoleNavName": {
            "type": "string",
            "nullable": true
          },
          "idRoleCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeRoleModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeSpecialityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSpeciality": {
            "type": "integer",
            "format": "int32"
          },
          "idSpecialityNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeSpecialityModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSpeciality": {
            "type": "integer",
            "format": "int32"
          },
          "idSpecialityNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventCallForStepDto": {
        "type": "object",
        "properties": {
          "eventOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idButton": {
            "type": "integer",
            "format": "int32"
          },
          "idButtonNavName": {
            "type": "string",
            "nullable": true
          },
          "idEvent": {
            "type": "integer",
            "format": "int32"
          },
          "idEventNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventCallForStepModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "eventOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idButton": {
            "type": "integer",
            "format": "int32"
          },
          "idButtonNavName": {
            "type": "string",
            "nullable": true
          },
          "idEvent": {
            "type": "integer",
            "format": "int32"
          },
          "idEventNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "controllerName": {
            "type": "string",
            "nullable": true
          },
          "controllerMethod": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "controllerName": {
            "type": "string",
            "nullable": true
          },
          "controllerMethod": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FunctionAccessDto": {
        "type": "object",
        "properties": {
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "idFunction": {
            "type": "integer",
            "format": "int32"
          },
          "idModule": {
            "type": "integer",
            "format": "int32"
          },
          "idRoleNavName": {
            "type": "string",
            "nullable": true
          },
          "idModuleNavName": {
            "type": "string",
            "nullable": true
          },
          "idFunctionNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FunctionAccessModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "idRole": {
            "type": "integer",
            "format": "int32"
          },
          "apiFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiFunctionModel"
            },
            "nullable": true
          },
          "idFunction": {
            "type": "integer",
            "format": "int32"
          },
          "idFunctionOld": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "History_BrigadeInCallDto": {
        "type": "object",
        "properties": {
          "setupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strsetupDate": {
            "type": "string",
            "nullable": true
          },
          "isCancelled": {
            "type": "boolean",
            "nullable": true
          },
          "cancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "delayStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arriveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strarriveDate": {
            "type": "string",
            "nullable": true
          },
          "otzvonDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strreturnDate": {
            "type": "string",
            "nullable": true
          },
          "totalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCancelReason": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCancelReasonNavName": {
            "type": "string",
            "nullable": true
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idVideoDocument": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idVideoDocumentNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusCode": {
            "type": "string",
            "nullable": true
          },
          "idSource": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSourceNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32"
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassionNavName": {
            "type": "string",
            "nullable": true
          },
          "addressHouseNavName": {
            "type": "string",
            "nullable": true
          },
          "addressFlatNavName": {
            "type": "string",
            "nullable": true
          },
          "phonePatientNavName": {
            "type": "string",
            "nullable": true
          },
          "statusIconColor": {
            "type": "string",
            "nullable": true
          },
          "statusIconSvg": {
            "type": "string",
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          },
          "brigadeComposition": {
            "type": "string",
            "nullable": true
          },
          "strotzvonDate": {
            "type": "string",
            "nullable": true
          },
          "strdelayStartDate": {
            "type": "string",
            "nullable": true
          },
          "strapproveDate": {
            "type": "string",
            "nullable": true
          },
          "strcancelDate": {
            "type": "string",
            "nullable": true
          },
          "strtotalDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "History_CallCardDto": {
        "type": "object",
        "properties": {
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFullAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isReferencePoint": {
            "type": "boolean",
            "nullable": true
          },
          "addressNotFound": {
            "type": "boolean",
            "nullable": true
          },
          "isdriverNeedCall": {
            "type": "boolean",
            "nullable": true
          },
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOk": {
            "type": "boolean",
            "nullable": true
          },
          "isSend": {
            "type": "boolean",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "idFeldsher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idFeldsherNavName": {
            "type": "string",
            "nullable": true
          },
          "idDispatcher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDispatcherNavName": {
            "type": "string",
            "nullable": true
          },
          "diagnoses": {
            "type": "string",
            "nullable": true
          },
          "hospitalizations": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "idMedCenterTransportation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateRegistration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateRegistration": {
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "addressHouse": {
            "type": "string",
            "nullable": true
          },
          "addressFlat": {
            "type": "string",
            "nullable": true
          },
          "addressEntrance": {
            "type": "string",
            "nullable": true
          },
          "addressFloor": {
            "type": "string",
            "nullable": true
          },
          "addressPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "addressGate": {
            "type": "string",
            "nullable": true
          },
          "addressReferencePoint": {
            "type": "string",
            "nullable": true
          },
          "addressFull": {
            "type": "string",
            "nullable": true
          },
          "isUnknownPatient": {
            "type": "boolean"
          },
          "fioWhoCalled": {
            "type": "string",
            "nullable": true
          },
          "phoneCaller": {
            "type": "string",
            "nullable": true
          },
          "phonePatient": {
            "type": "string",
            "nullable": true
          },
          "brigadeNumberHistory": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "xCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoordFact": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "brigadeSetupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeSetupDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeApproveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeApproveDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeIsCanceled": {
            "type": "boolean",
            "nullable": true
          },
          "brigadeCancelDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeCancelDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeDelayStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeDelayStartDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeArriveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeArriveDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeOtzvonDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeOtzvonDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeReturnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeReturnDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeTotalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strbrigadeTotalDate": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdCancelReason": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeIdCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeIdCancelReasonNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdCancelReasonNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdSource": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeIdSourceNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeIdSourceNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeNumber": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeidStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatusCode": {
            "type": "string",
            "nullable": true
          },
          "brigadeidStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "brigadeidType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeidTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeidTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "brigadeidProfile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "brigadeidProfileNavName": {
            "type": "string",
            "nullable": true
          },
          "brigadeidProfileNavNameky": {
            "type": "string",
            "nullable": true
          },
          "isParamedicReception": {
            "type": "boolean",
            "nullable": true
          },
          "hospitalizationDescription": {
            "type": "string",
            "nullable": true
          },
          "doctorOnDuty": {
            "type": "string",
            "nullable": true
          },
          "hospitalizationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strhospitalizationDate": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "cardOccassions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallCardOccassionDto"
            },
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "idSex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "idSexNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idSexCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSexCardNavName": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "signalListNumber": {
            "type": "string",
            "nullable": true
          },
          "signalListTreatment": {
            "type": "string",
            "nullable": true
          },
          "followListNumber": {
            "type": "string",
            "nullable": true
          },
          "complaints": {
            "type": "string",
            "nullable": true
          },
          "brigadeComposition": {
            "type": "string",
            "nullable": true
          },
          "brigadeCompositionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "anamnez": {
            "type": "string",
            "nullable": true
          },
          "ekg": {
            "type": "string",
            "nullable": true
          },
          "additionalObjectiveData": {
            "type": "string",
            "nullable": true
          },
          "assistantProvided": {
            "type": "string",
            "nullable": true
          },
          "controlIndicators": {
            "type": "string",
            "nullable": true
          },
          "aD": {
            "type": "string",
            "nullable": true
          },
          "aDr": {
            "type": "string",
            "nullable": true
          },
          "chSS": {
            "type": "string",
            "nullable": true
          },
          "chD": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "afterAD": {
            "type": "string",
            "nullable": true
          },
          "afterChSS": {
            "type": "string",
            "nullable": true
          },
          "afterChD": {
            "type": "string",
            "nullable": true
          },
          "afterTemperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCall": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallNavName": {
            "type": "string",
            "nullable": true
          },
          "idWhoCalled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idWhoCalledNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "idStatusNavName": {
            "type": "string",
            "nullable": true
          },
          "idStatusNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idStatusCode": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColorBrigade": {
            "type": "string",
            "nullable": true
          },
          "idCustomSvgIconPreviewBrigade": {
            "type": "string",
            "nullable": true
          },
          "idTerritory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedCenter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedCenterNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallResult": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResultNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallResultNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPatientNavName": {
            "type": "string",
            "nullable": true
          },
          "idStateChanges": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idStateChangesNavName": {
            "type": "string",
            "nullable": true
          },
          "idStateChangesNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idOccassion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOccassionNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassionNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idAppealType": {
            "type": "integer",
            "format": "int32"
          },
          "idAppealTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idAppealTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idCategoryCito": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCategoryCitoNavName": {
            "type": "string",
            "nullable": true
          },
          "idCategoryCitoNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idProfileType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idProfileTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idProfileTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDifficultyCategory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDifficultyCategoryNavName": {
            "type": "string",
            "nullable": true
          },
          "idDifficultyCategoryNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idMadeEvents": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMadeEventsNavName": {
            "type": "string",
            "nullable": true
          },
          "idMadeEventsNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idMedicalTherapy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicalTherapyNavName": {
            "type": "string",
            "nullable": true
          },
          "idExpert": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idExpertNavName": {
            "type": "string",
            "nullable": true
          },
          "expertComments": {
            "type": "string",
            "nullable": true
          },
          "neededExtraHelp": {
            "type": "boolean",
            "nullable": true
          },
          "dateExpertResult": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idAgeTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idAgeTypeCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult2NavName": {
            "type": "string",
            "nullable": true
          },
          "idCallResult3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCallResult3NavName": {
            "type": "string",
            "nullable": true
          },
          "resultDescription": {
            "type": "string",
            "nullable": true
          },
          "resultDescription2": {
            "type": "string",
            "nullable": true
          },
          "resultDescription3": {
            "type": "string",
            "nullable": true
          },
          "updatedFullName": {
            "type": "string",
            "nullable": true
          },
          "updatedAddress": {
            "type": "string",
            "nullable": true
          },
          "dispatcherNumber": {
            "type": "string",
            "nullable": true
          },
          "updatedAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUpdatedAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUpdatedAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "afterSaturation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "idAgeTypeCardNavName": {
            "type": "string",
            "nullable": true
          },
          "strdateExpertResult": {
            "type": "string",
            "nullable": true
          },
          "neededInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionDictionariesCardDto"
            },
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "History_DiagnoseCardDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDiagnoseType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDiagnoseTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idMkb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMkbNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "askSeniorDoctor": {
            "type": "boolean",
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "History_InspectionDictionariesCardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idInspection": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idInspectionNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          },
          "inspectionDictionaryType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "History_PatientDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "someInfo": {
            "type": "string",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "idSexNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idAgeTypeNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "History_RouteHospitalizationDto": {
        "type": "object",
        "properties": {
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idHospital": {
            "type": "integer",
            "format": "int32"
          },
          "idHospitalNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "dutyDoctorFullname": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idResultHospitalization": {
            "type": "integer",
            "format": "int32"
          },
          "idResultHospitalizationNavName": {
            "type": "string",
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "History_SpentMedicineDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicament": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicamentNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParamedicReceptionNavName": {
            "type": "string",
            "nullable": true
          },
          "idHistory": {
            "type": "integer",
            "format": "int32"
          },
          "typeHistory": {
            "type": "string",
            "nullable": true
          },
          "timeHistory": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strtimeHistory": {
            "type": "string",
            "nullable": true
          },
          "sessionHistory": {
            "type": "string",
            "nullable": true
          },
          "userHistoryFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageInBlogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBlog": {
            "type": "integer",
            "format": "int32"
          },
          "idBlogNavName": {
            "type": "string",
            "nullable": true
          },
          "idFile": {
            "type": "integer",
            "format": "int32"
          },
          "idFileNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageInBlogModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBlog": {
            "type": "integer",
            "format": "int32"
          },
          "idFile": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InspectionDictionariesCardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idInspection": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idInspectionNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InspectionDictionariesCardModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idInspection": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idInspectionNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InspectionDictionaryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "hasText": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InspectionDictionaryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "hasText": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InspectionDictionaryTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inspectionDictionaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionDictionaryDto"
            },
            "nullable": true
          },
          "neededInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionDictionaryDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InspectionDictionaryTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LanguageModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LogicalDocumentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "idDocumentType": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idFile": {
            "type": "integer",
            "format": "int32"
          },
          "idFileNavName": {
            "type": "string",
            "nullable": true
          },
          "dateCreate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateCreate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogicalDocumentModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "idDocumentType": {
            "type": "integer",
            "format": "int32"
          },
          "idFile": {
            "type": "integer",
            "format": "int32"
          },
          "dateCreate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateCreate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MKB10Dto": {
        "type": "object",
        "properties": {
          "hasItems": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParentNavName": {
            "type": "string",
            "nullable": true
          },
          "idParentCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MKB10Model": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParentNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MadeEventsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MadeEventsModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedCenterDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "xCoord": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoord": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedCenterModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "xCoord": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "yCoord": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicalManipulationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MedicalManipulationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MedicalTherapyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicalTherapyModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicamentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "idUnitType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUnitTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicamentType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicamentTypeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicamentModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idUnitType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUnitTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idMedicamentType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicamentTypeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MedicamentTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MedicamentTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NeededInspectionsModel": {
        "type": "object",
        "properties": {
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "neededInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionDictionariesCardModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDispatcherDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "jsonParameters": {
            "type": "string",
            "nullable": true
          },
          "isDecided": {
            "type": "boolean"
          },
          "idNotificationType": {
            "type": "integer",
            "format": "int32"
          },
          "idNotificationTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "dateDecide": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateDecide": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDispatcherModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "jsonParameters": {
            "type": "string",
            "nullable": true
          },
          "isDecided": {
            "type": "boolean"
          },
          "idNotificationType": {
            "type": "integer",
            "format": "int32"
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "dateDecide": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateDecide": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDispatcherTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "notifies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDispatcherDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDispatcherTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OccassioinDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParentNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassionType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOccassionTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idCategoryCito": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCategoryCitoNavName": {
            "type": "string",
            "nullable": true
          },
          "idOccassionTypeCode": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OccassioinModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOccassionType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCategoryCito": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OccassionTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OccassionTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParamLoadModel": {
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "end": {
            "type": "integer",
            "format": "int32"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "byDescending": {
            "type": "boolean"
          },
          "filter": {
            "type": "string",
            "nullable": true
          },
          "dateStart": {
            "type": "string",
            "nullable": true
          },
          "dateEnd": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "filterName": {
            "type": "string",
            "nullable": true
          },
          "occasion": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "callresult": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "idMkb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParamedicReceptionDiagnosDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMkb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMkbNavName": {
            "type": "string",
            "nullable": true
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32"
          },
          "idParamedicReceptionNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParamedicReceptionDiagnosModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMkb": {
            "type": "integer",
            "format": "int32"
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParamedicReceptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dateRegistered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateRegistered": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idEmployeeNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOk": {
            "type": "boolean",
            "nullable": true
          },
          "isSend": {
            "type": "boolean",
            "nullable": true
          },
          "idLpu": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idLpuNavName": {
            "type": "string",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32"
          },
          "idPatientNavName": {
            "type": "string",
            "nullable": true
          },
          "idTypeAssistance": {
            "type": "integer",
            "format": "int32"
          },
          "idTypeAssistanceNavName": {
            "type": "string",
            "nullable": true
          },
          "aD": {
            "type": "string",
            "nullable": true
          },
          "aDr": {
            "type": "string",
            "nullable": true
          },
          "chSS": {
            "type": "string",
            "nullable": true
          },
          "chD": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "assistanceProvided": {
            "type": "string",
            "nullable": true
          },
          "diagnose": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParamedicReceptionModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dateRegistered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateRegistered": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOk": {
            "type": "boolean",
            "nullable": true
          },
          "isSend": {
            "type": "boolean",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPatient": {
            "type": "integer",
            "format": "int32"
          },
          "idTypeAssistance": {
            "type": "integer",
            "format": "int32"
          },
          "aD": {
            "type": "string",
            "nullable": true
          },
          "aDr": {
            "type": "string",
            "nullable": true
          },
          "chSS": {
            "type": "string",
            "nullable": true
          },
          "chD": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "assistanceProvided": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idLpu": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "someInfo": {
            "type": "string",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "idSexNavNameky": {
            "type": "string",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idAgeTypeNavNameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "secondName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateBirth": {
            "type": "string",
            "nullable": true
          },
          "homeAddress": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "someInfo": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idSex": {
            "type": "integer",
            "format": "int32"
          },
          "idSexNavName": {
            "type": "string",
            "nullable": true
          },
          "idAgeType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idAgeTypeNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformedMedicalManipulationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulation": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulationNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCallCardNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformedMedicalManipulationFeldsherDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulation": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulationNavName": {
            "type": "string",
            "nullable": true
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32"
          },
          "idParamedicReceptionNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformedMedicalManipulationFeldsherModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulation": {
            "type": "integer",
            "format": "int32"
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PerformedMedicalManipulationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulation": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicalManipulationNavName": {
            "type": "string",
            "nullable": true
          },
          "idCallCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCallCardNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhraseForDocumentCategoryDto": {
        "type": "object",
        "properties": {
          "phraseForDocument": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhraseForDocumentDto"
            },
            "nullable": true
          },
          "phraseBreadcrumbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhraseForDocumentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhraseForDocumentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isCategory": {
            "type": "boolean",
            "nullable": true
          },
          "idParentNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhraseForDocumentModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idParent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isCategory": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhraseForDocumentParentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostInBrigadeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostInBrigadeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostInWorkShiftDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PostInWorkShiftModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProfileTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProfileTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RejectionReasonHospitalizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RejectionReasonHospitalizationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepeatTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "repeatIntervalMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPeriod": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RepeatTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "repeatIntervalMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPeriod": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResultHospitalizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResultHospitalizationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RouteHospitalizationDto": {
        "type": "object",
        "properties": {
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idHospital": {
            "type": "integer",
            "format": "int32"
          },
          "idHospitalNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "dutyDoctorFullname": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idResultHospitalization": {
            "type": "integer",
            "format": "int32"
          },
          "idResultHospitalizationNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouteHospitalizationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "dateSetup": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateSetup": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idHospital": {
            "type": "integer",
            "format": "int32"
          },
          "idHospitalName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "dutyDoctorFullname": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idResultHospitalization": {
            "type": "integer",
            "format": "int32"
          },
          "idResultHospitalizationNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "repeatTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepeatTypeDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScheduleTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SchedulerFilter": {
        "type": "object",
        "properties": {
          "idWorkShift": {
            "type": "integer",
            "format": "int32"
          },
          "idCallResult": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "occassions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SexDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SexModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SipAccauntDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SipAccauntModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpecialityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpecialityModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpentMedicineDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicament": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicamentNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParamedicReceptionNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpentMedicineModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicament": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedicamentNavName": {
            "type": "string",
            "nullable": true
          },
          "idBrigade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idBrigadeNavName": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idParamedicReceptionNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpentMedicineParamedicReceptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicament": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicamentNavName": {
            "type": "string",
            "nullable": true
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "idParamedicReceptionNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpentMedicineParamedicReceptionModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idMedicament": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "idParamedicReception": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StateChangesSickDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StateChangesSickModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatisticsIndicatorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "isChecked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatisticsIndicatorInCardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idCardNavName": {
            "type": "string",
            "nullable": true
          },
          "idIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "idIndicatorNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatisticsIndicatorInCardModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCard": {
            "type": "integer",
            "format": "int32"
          },
          "idIndicator": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatisticsIndicatorModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemLanguageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SystemLanguageModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TypeParamedicAssistanceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TypeParamedicAssistanceModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UnitTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UnitTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserSessionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sessionGuid": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strstartDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strendDate": {
            "type": "string",
            "nullable": true
          },
          "appCode": {
            "type": "string",
            "nullable": true
          },
          "deviceCode": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSessionModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sessionGuid": {
            "type": "string",
            "nullable": true
          },
          "idEmployee": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strstartDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strendDate": {
            "type": "string",
            "nullable": true
          },
          "appCode": {
            "type": "string",
            "nullable": true
          },
          "deviceCode": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WhoCalledDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WhoCalledModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkShiftDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "copyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateStart": {
            "type": "string",
            "nullable": true
          },
          "dateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateEnd": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkShiftModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateStart": {
            "type": "string",
            "nullable": true
          },
          "copyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strdateEnd": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowBrigadeCallStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idStart": {
            "type": "integer",
            "format": "int32"
          },
          "idStartNavName": {
            "type": "string",
            "nullable": true
          },
          "idEnd": {
            "type": "integer",
            "format": "int32"
          },
          "idEndNavName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowBrigadeCallStatusModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idStart": {
            "type": "integer",
            "format": "int32"
          },
          "idEnd": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkplaceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkplaceModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameky": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ZadarmaDto": {
        "type": "object",
        "properties": {
          "inviteText": {
            "type": "string",
            "nullable": true
          },
          "offWhatsapp": {
            "type": "boolean"
          },
          "lastCardId": {
            "type": "integer",
            "format": "int32"
          },
          "callCardDto": {
            "$ref": "#/components/schemas/CallCardDto"
          },
          "lastCalls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallDto"
            },
            "nullable": true
          },
          "currentCallId": {
            "type": "integer",
            "format": "int32"
          },
          "dto_event": {
            "type": "string",
            "nullable": true
          },
          "dto_internal": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "nullable": true
          },
          "caller_id": {
            "type": "string",
            "nullable": true
          },
          "call_start": {
            "type": "string",
            "nullable": true
          },
          "pbx_call_id": {
            "type": "string",
            "nullable": true
          },
          "called_did": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "disposition": {
            "type": "string",
            "nullable": true
          },
          "last_internal": {
            "type": "string",
            "nullable": true
          },
          "status_code": {
            "type": "string",
            "nullable": true
          },
          "is_recorded": {
            "type": "string",
            "nullable": true
          },
          "call_id_with_rec": {
            "type": "string",
            "nullable": true
          },
          "is_for_doctor": {
            "type": "boolean"
          },
          "for_doctor_callCard": {
            "$ref": "#/components/schemas/CallCardDto"
          }
        },
        "additionalProperties": false
      },
      "roDocumentTemplateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "roDocumentTemplateCategoryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_DBMSDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_DBMSModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_DashboardDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "widthMob": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightMob": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idOwner": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOwnerNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_DashboardModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "widthMob": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heightMob": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDashboardType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDashboardTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idOwner": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idOwnerNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_DocumentTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idDocumentTyplateType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idDocumentTyplateTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "useDiagnos": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_DocumentTemplateModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "idDocumentTyplateType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useDiagnos": {
            "type": "boolean",
            "nullable": true
          },
          "specialitys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_DocumentTemplateTranslationDto": {
        "type": "object",
        "properties": {
          "template": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplateNavName": {
            "type": "string",
            "nullable": true
          },
          "useDiagnos": {
            "type": "boolean",
            "nullable": true
          },
          "idLanguage": {
            "type": "integer",
            "format": "int32"
          },
          "idLanguageNavName": {
            "type": "string",
            "nullable": true
          },
          "customSubsribtion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isSubscribed": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_DocumentTemplateTranslationModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplateNavName": {
            "type": "string",
            "nullable": true
          },
          "idLanguage": {
            "type": "integer",
            "format": "int32"
          },
          "idLanguageNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_GadgetDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "className": {
            "type": "string",
            "nullable": true
          },
          "nameSpace": {
            "type": "string",
            "nullable": true
          },
          "refreshRate": {
            "type": "integer",
            "format": "int32"
          },
          "blankJSON": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idLibrary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idLibraryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_GadgetInDashboardDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "coordX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coordY": {
            "type": "integer",
            "format": "int32"
          },
          "widthDashboard": {
            "type": "integer",
            "format": "int32"
          },
          "mobwidthDashboard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "heightDashboard": {
            "type": "integer",
            "format": "int32"
          },
          "mobheightDashboard": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "mobCoordX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobCoordY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobHeight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobWidth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "filledJson": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDashboard": {
            "type": "integer",
            "format": "int32"
          },
          "idDashboardNavName": {
            "type": "string",
            "nullable": true
          },
          "idGadget": {
            "type": "integer",
            "format": "int32"
          },
          "idGadgetTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idGadgetTypeNavCode": {
            "type": "string",
            "nullable": true
          },
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryNavName": {
            "type": "string",
            "nullable": true
          },
          "refreshRate": {
            "type": "integer",
            "format": "int32"
          },
          "queryData": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_GadgetInDashboardModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "coordX": {
            "type": "integer",
            "format": "int32"
          },
          "coordY": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "mobCoordX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobCoordY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobHeight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mobWidth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "filledJSON": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDashboard": {
            "type": "integer",
            "format": "int32"
          },
          "idDashboardNavName": {
            "type": "string",
            "nullable": true
          },
          "idGadgetType": {
            "type": "integer",
            "format": "int32"
          },
          "idGadgetTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_GadgetModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "className": {
            "type": "string",
            "nullable": true
          },
          "nameSpace": {
            "type": "string",
            "nullable": true
          },
          "refreshRate": {
            "type": "integer",
            "format": "int32"
          },
          "blankJSON": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idLibrary": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idLibraryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_GadgetTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_GadgetTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_PlaceHolderGroupsMtmDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idPlaceHolder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPlaceHolderNavName": {
            "type": "string",
            "nullable": true
          },
          "idTypePlaceholder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypePlaceholderNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_PlaceHolderGroupsMtmModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idPlaceHolder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idPlaceHolderNavName": {
            "type": "string",
            "nullable": true
          },
          "idTypePlaceholder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idTypePlaceholderNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_PlaceHolderTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryNavName": {
            "type": "string",
            "nullable": true
          },
          "idQueryCommand": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_PlaceHolderTemplateModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryNavName": {
            "type": "string",
            "nullable": true
          },
          "s_PlaceHolderGroupsMtms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/s_PlaceHolderGroupsMtmModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_PlaceholderGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIconPreview": {
            "type": "string",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_PlaceholderGroupModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idCustomSvgIcon": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iconColor": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_QueriesDocumentTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplateNavName": {
            "type": "string",
            "nullable": true
          },
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_QueriesDocumentTemplateModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplate": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumentTemplateNavName": {
            "type": "string",
            "nullable": true
          },
          "idQuery": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_QueryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryType": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idQueryTypeNavCode": {
            "type": "string",
            "nullable": true
          },
          "idDBMS": {
            "type": "integer",
            "format": "int32"
          },
          "idDBMSNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_QueryModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryType": {
            "type": "integer",
            "format": "int32"
          },
          "idQueryTypeNavName": {
            "type": "string",
            "nullable": true
          },
          "idDBMS": {
            "type": "integer",
            "format": "int32"
          },
          "idDBMSNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_QueryTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_QueryTypeModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "queueNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "s_TemplateDocumentPlaceholderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idTemplateDocument": {
            "type": "integer",
            "format": "int32"
          },
          "idTemplateDocumentNavName": {
            "type": "string",
            "nullable": true
          },
          "idPlaceholder": {
            "type": "integer",
            "format": "int32"
          },
          "idPlaceholderNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "s_TemplateDocumentPlaceholderModel": {
        "type": "object",
        "properties": {
          "lastUpdatedUser": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "strlastUpdatedTime": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idTemplateDocument": {
            "type": "integer",
            "format": "int32"
          },
          "idTemplateDocumentNavName": {
            "type": "string",
            "nullable": true
          },
          "idPlaceholder": {
            "type": "integer",
            "format": "int32"
          },
          "idPlaceholderNavName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "jwt_auth": {
        "type": "http",
        "description": "Specify the authorization token.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "jwt_auth": [ ]
    }
  ],
  "tags": [
    {
      "name": "AgeType",
      "description": "Тип возраста в Карте вызова"
    },
    {
      "name": "AdminUnitType",
      "description": "Тип Административной единицы"
    },
    {
      "name": "AdminUnit",
      "description": "Административная единица"
    }
  ]
}